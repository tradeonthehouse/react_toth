{"ast":null,"code":"var unresolvedJobs = new Set();\nfunction pushJob(stack, job, pointer) {\n  if (!stack[pointer]) stack[pointer] = [];\n  stack[pointer].push(job);\n}\nfunction batchLayout(callback) {\n  unresolvedJobs.add(callback);\n  return function () {\n    return unresolvedJobs.delete(callback);\n  };\n}\nfunction flushLayout() {\n  if (!unresolvedJobs.size) return;\n  var pointer = 0;\n  var reads = [[]];\n  var writes = [];\n  var setRead = function (job) {\n    return pushJob(reads, job, pointer);\n  };\n  var setWrite = function (job) {\n    pushJob(writes, job, pointer);\n    pointer++;\n  };\n  /**\r\n   * Resolve jobs into their array stacks\r\n   */\n  unresolvedJobs.forEach(function (callback) {\n    callback(setRead, setWrite);\n    pointer = 0;\n  });\n  unresolvedJobs.clear();\n  /**\r\n   * Execute jobs\r\n   */\n  var numStacks = writes.length;\n  for (var i = 0; i <= numStacks; i++) {\n    reads[i] && reads[i].forEach(executeJob);\n    writes[i] && writes[i].forEach(executeJob);\n  }\n}\nvar executeJob = function (job) {\n  return job();\n};\nexport { batchLayout, flushLayout };","map":null,"metadata":{},"sourceType":"module"}