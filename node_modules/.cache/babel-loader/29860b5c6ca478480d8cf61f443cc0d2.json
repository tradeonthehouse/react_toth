{"ast":null,"code":"/* Use it instead of .includes method for IE support */\nexport function arrayIncludes(array, itemOrItems) {\n  if (Array.isArray(itemOrItems)) {\n    return itemOrItems.every(item => array.indexOf(item) !== -1);\n  }\n  return array.indexOf(itemOrItems) !== -1;\n}\nexport const onSpaceOrEnter = (innerFn, onFocus) => event => {\n  if (event.key === 'Enter' || event.key === ' ') {\n    innerFn(); // prevent any side effects\n\n    event.preventDefault();\n    event.stopPropagation();\n  }\n  if (onFocus) {\n    onFocus(event);\n  }\n};\n/* Quick untyped helper to improve function composition readability */\n\nexport const pipe = function () {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n  return fns.reduceRight((prevFn, nextFn) => function () {\n    return nextFn(prevFn(...arguments));\n  }, value => value);\n};\nexport const executeInTheNextEventLoopTick = fn => {\n  setTimeout(fn, 0);\n};\nexport function createDelegatedEventHandler(fn, onEvent) {\n  return event => {\n    fn(event);\n    if (onEvent) {\n      onEvent(event);\n    }\n  };\n}\nexport const doNothing = () => {};","map":null,"metadata":{},"sourceType":"module"}