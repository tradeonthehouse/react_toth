{"ast":null,"code":"/**\r\n * A list of all transformable axes. We'll use this list to generated a version\r\n * of each axes for each transform.\r\n */\nvar transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\r\n * An ordered array of each transformable value. By default, transform values\r\n * will be sorted to this order.\r\n */\nvar order = [\"translate\", \"scale\", \"rotate\", \"skew\"];\n/**\r\n * Generate a list of every possible transform key.\r\n */\nvar transformProps = [\"transformPerspective\", \"x\", \"y\", \"z\"];\norder.forEach(function (operationKey) {\n  return transformAxes.forEach(function (axesKey) {\n    return transformProps.push(operationKey + axesKey);\n  });\n});\n/**\r\n * A function to use with Array.sort to sort transform keys by their default order.\r\n */\nfunction sortTransformProps(a, b) {\n  return transformProps.indexOf(a) - transformProps.indexOf(b);\n}\n/**\r\n * A quick lookup for transform props.\r\n */\nvar transformPropSet = new Set(transformProps);\nfunction isTransformProp(key) {\n  return transformPropSet.has(key);\n}\n/**\r\n * A quick lookup for transform origin props\r\n */\nvar transformOriginProps = new Set([\"originX\", \"originY\", \"originZ\"]);\nfunction isTransformOriginProp(key) {\n  return transformOriginProps.has(key);\n}\nexport { isTransformOriginProp, isTransformProp, sortTransformProps, transformAxes, transformProps };","map":null,"metadata":{},"sourceType":"module"}