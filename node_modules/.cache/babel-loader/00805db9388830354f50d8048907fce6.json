{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"ampm\", \"components\", \"inputFormat\", \"maxTime\", \"minTime\", \"openTo\", \"views\"];\nimport { useThemeProps } from '@material-ui/core/styles';\nimport ClockIcon from '../internal/svg-icons/Clock';\nimport { pick12hOr24hFormat } from '../internal/pickers/text-field-helper';\nimport { useUtils } from '../internal/pickers/hooks/useUtils';\nimport { useParsedDate } from '../internal/pickers/hooks/date-helpers-hooks';\nfunction getTextFieldAriaText(value, utils) {\n  return value && utils.isValid(utils.date(value)) ? `Choose time, selected time is ${utils.format(utils.date(value), 'fullTime')}` : 'Choose time';\n}\nexport function useTimePickerDefaultizedProps(_ref, name) {\n  let {\n      ampm,\n      components,\n      inputFormat,\n      maxTime,\n      minTime,\n      openTo = 'hours',\n      views = ['hours', 'minutes']\n    } = _ref,\n    other = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const utils = useUtils();\n  const willUseAmPm = ampm != null ? ampm : utils.is12HourCycleInCurrentLocale();\n  return useThemeProps({\n    props: _extends({\n      views,\n      openTo,\n      minTime: useParsedDate(minTime),\n      maxTime: useParsedDate(maxTime),\n      ampm: willUseAmPm,\n      acceptRegex: willUseAmPm ? /[\\dapAP]/gi : /\\d/gi,\n      mask: '__:__',\n      disableMaskedInput: willUseAmPm,\n      getOpenDialogAriaText: getTextFieldAriaText,\n      components: _extends({\n        OpenPickerIcon: ClockIcon\n      }, components),\n      inputFormat: pick12hOr24hFormat(inputFormat, willUseAmPm, {\n        localized: utils.formats.fullTime,\n        '12h': utils.formats.fullTime12h,\n        '24h': utils.formats.fullTime24h\n      })\n    }, other),\n    name\n  });\n}","map":null,"metadata":{},"sourceType":"module"}