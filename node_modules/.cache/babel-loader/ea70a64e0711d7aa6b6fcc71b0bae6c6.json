{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vishal\\\\Desktop\\\\django backend\\\\api-server-django\\\\react-ui\\\\src\\\\utils\\\\route-guard\\\\AuthGuard.js\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\n//-----------------------|| AUTH GUARD ||-----------------------//\n\n/**\n * Authentication guard for routes\n * @param {PropTypes.node} children children element/node\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthGuard = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const account = useSelector(state => state.account);\n  const {\n    isLoggedIn\n  } = account;\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  }\n  return children;\n};\n_s(AuthGuard, \"c4G/JG186yPhlXxa9kOCRPDxPgg=\", false, function () {\n  return [useSelector];\n});\n_c = AuthGuard;\nAuthGuard.propTypes = {\n  children: PropTypes.node\n};\nexport default AuthGuard;\nvar _c;\n$RefreshReg$(_c, \"AuthGuard\");","map":{"version":3,"names":["PropTypes","React","useSelector","Redirect","jsxDEV","_jsxDEV","AuthGuard","_ref","_s","children","account","state","isLoggedIn","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","node","$RefreshReg$"],"sources":["C:/Users/Vishal/Desktop/django backend/api-server-django/react-ui/src/utils/route-guard/AuthGuard.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\n//-----------------------|| AUTH GUARD ||-----------------------//\n\n/**\n * Authentication guard for routes\n * @param {PropTypes.node} children children element/node\n */\nconst AuthGuard = ({ children }) => {\n    const account = useSelector((state) => state.account);\n    const { isLoggedIn } = account;\n\n    if (!isLoggedIn) {\n        return <Redirect to=\"/login\" />;\n    }\n\n    return children;\n};\n\nAuthGuard.propTypes = {\n    children: PropTypes.node\n};\n\nexport default AuthGuard;\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,QAAQ,kBAAkB;;AAE3C;;AAEA;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,SAAS,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC3B,MAAMG,OAAO,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACD,OAAO,CAAC;EACrD,MAAM;IAAEE;EAAW,CAAC,GAAGF,OAAO;EAE9B,IAAI,CAACE,UAAU,EAAE;IACb,oBAAOP,OAAA,CAACF,QAAQ;MAACU,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EACnC;EAEA,OAAOR,QAAQ;AACnB,CAAC;AAACD,EAAA,CATIF,SAAS;EAAA,QACKJ,WAAW;AAAA;AAAAgB,EAAA,GADzBZ,SAAS;AAWfA,SAAS,CAACa,SAAS,GAAG;EAClBV,QAAQ,EAAET,SAAS,CAACoB;AACxB,CAAC;AAED,eAAed,SAAS;AAAC,IAAAY,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module"}