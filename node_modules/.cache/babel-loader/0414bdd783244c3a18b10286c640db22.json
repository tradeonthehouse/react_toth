{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Skeleton from '@material-ui/core/Skeleton';\nimport { styled, useThemeProps } from '@material-ui/core/styles';\nimport { unstable_composeClasses as composeClasses, generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nimport { DAY_SIZE, DAY_MARGIN } from '../internal/pickers/constants/dimensions';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function getCalendarPickerSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiCalendarPickerSkeleton', slot);\n}\nexport const calendarPickerSkeletonClasses = generateUtilityClasses('MuiCalendarPickerSkeleton', ['root', 'week', 'daySkeleton']);\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    week: ['week'],\n    daySkeleton: ['daySkeleton']\n  };\n  return composeClasses(slots, getCalendarPickerSkeletonUtilityClass, classes);\n};\nconst CalendarPickerSkeletonRoot = styled('div', {\n  name: 'MuiCalendarPickerSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  alignSelf: 'start'\n});\nconst CalendarPickerSkeletonWeek = styled('div', {\n  name: 'MuiCalendarPickerSkeleton',\n  slot: 'Week',\n  overridesResolver: (props, styles) => styles.week\n})({\n  margin: `${DAY_MARGIN}px 0`,\n  display: 'flex',\n  justifyContent: 'center'\n});\nconst CalendarPickerSkeletonDay = styled(Skeleton, {\n  name: 'MuiCalendarPickerSkeleton',\n  slot: 'Day',\n  overridesResolver: (props, styles) => styles.daySkeleton\n})(_ref => {\n  let {\n    styleProps\n  } = _ref;\n  return _extends({\n    margin: `0 ${DAY_MARGIN}px`\n  }, styleProps.day === 0 && {\n    visibility: 'hidden'\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CalendarPickerSkeletonDay.propTypes\n/* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * Optional children to infer width and height from.\r\n   */\n  children: PropTypes.node,\n  /**\r\n   * @ignore\r\n   */\n  styleProps: PropTypes.object\n} : void 0;\nconst monthMap = [[0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0, 0, 0]];\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Date Picker](https://material-ui.com/components/date-picker/)\r\n *\r\n * API:\r\n *\r\n * - [CalendarPickerSkeleton API](https://material-ui.com/api/calendar-picker-skeleton/)\r\n */\n\nfunction CalendarPickerSkeleton(props) {\n  const _useThemeProps = useThemeProps({\n      props,\n      name: 'MuiCalendarPickerSkeleton'\n    }),\n    {\n      className\n    } = _useThemeProps,\n    other = _objectWithoutPropertiesLoose(_useThemeProps, _excluded);\n  const classes = useUtilityClasses(props);\n  return /*#__PURE__*/_jsx(CalendarPickerSkeletonRoot, _extends({\n    className: clsx(classes.root, className)\n  }, other, {\n    children: monthMap.map((week, index) => /*#__PURE__*/_jsx(CalendarPickerSkeletonWeek, {\n      className: classes.week,\n      children: week.map((day, index2) => /*#__PURE__*/_jsx(CalendarPickerSkeletonDay, {\n        variant: \"circular\",\n        width: DAY_SIZE,\n        height: DAY_SIZE,\n        className: classes.daySkeleton,\n        styleProps: {\n          day\n        }\n      }, index2))\n    }, index))\n  }));\n}\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Date Picker](https://material-ui.com/components/date-picker/)\r\n *\r\n * API:\r\n *\r\n * - [CalendarPickerSkeleton API](https://material-ui.com/api/calendar-picker-skeleton/)\r\n */\n\nprocess.env.NODE_ENV !== \"production\" ? CalendarPickerSkeleton.propTypes\n/* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * @ignore\r\n   */\n  children: PropTypes.node,\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CalendarPickerSkeleton;","map":null,"metadata":{},"sourceType":"module"}