{"ast":null,"code":"import { useCombineMotionValues } from './use-combine-values.js';\n\n/**\r\n * Combine multiple motion values into a new one using a string template literal.\r\n *\r\n * ```jsx\r\n * import {\r\n *   motion,\r\n *   useSpring,\r\n *   useMotionValue,\r\n *   useMotionTemplate\r\n * } from \"framer-motion\"\r\n *\r\n * function Component() {\r\n *   const shadowX = useSpring(0)\r\n *   const shadowY = useMotionValue(0)\r\n *   const shadow = useMotionTemplate`drop-shadow(${shadowX}px ${shadowY}px 20px rgba(0,0,0,0.3))`\r\n *\r\n *   return <motion.div style={{ filter: shadow }} />\r\n * }\r\n * ```\r\n *\r\n * @public\r\n */\nfunction useMotionTemplate(fragments) {\n  var values = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    values[_i - 1] = arguments[_i];\n  }\n  /**\r\n   * Create a function that will build a string from the latest motion values.\r\n   */\n  var numFragments = fragments.length;\n  function buildValue() {\n    var output = \"\";\n    for (var i = 0; i < numFragments; i++) {\n      output += fragments[i];\n      var value = values[i];\n      if (value) output += values[i].get();\n    }\n    return output;\n  }\n  return useCombineMotionValues(values, buildValue);\n}\nexport { useMotionTemplate };","map":null,"metadata":{},"sourceType":"module"}