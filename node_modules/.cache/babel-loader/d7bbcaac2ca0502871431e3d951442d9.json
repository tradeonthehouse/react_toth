{"ast":null,"code":"import { useMotionValue } from './use-motion-value.js';\nimport { useMultiOnChange } from './use-on-change.js';\nimport sync from 'framesync';\nfunction useCombineMotionValues(values, combineValues) {\n  /**\r\n   * Initialise the returned motion value. This remains the same between renders.\r\n   */\n  var value = useMotionValue(combineValues());\n  /**\r\n   * Create a function that will update the template motion value with the latest values.\r\n   * This is pre-bound so whenever a motion value updates it can schedule its\r\n   * execution in Framesync. If it's already been scheduled it won't be fired twice\r\n   * in a single frame.\r\n   */\n  var updateValue = function () {\n    return value.set(combineValues());\n  };\n  /**\r\n   * Synchronously update the motion value with the latest values during the render.\r\n   * This ensures that within a React render, the styles applied to the DOM are up-to-date.\r\n   */\n  updateValue();\n  /**\r\n   * Subscribe to all motion values found within the template. Whenever any of them change,\r\n   * schedule an update.\r\n   */\n  useMultiOnChange(values, function () {\n    return sync.update(updateValue, false, true);\n  });\n  return value;\n}\nexport { useCombineMotionValues };","map":null,"metadata":{},"sourceType":"module"}