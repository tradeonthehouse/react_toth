{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selected\", \"value\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport Typography from '@material-ui/core/Typography';\nimport { styled } from '@material-ui/core/styles';\nimport { generateUtilityClasses } from '@material-ui/unstyled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst classes = generateUtilityClasses('PrivatePickersToolbarText', ['selected']);\nconst PickersToolbarTextRoot = styled(Typography, {\n  skipSx: true\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    transition: theme.transitions.create('color'),\n    color: theme.palette.text.secondary,\n    [`&.${classes.selected}`]: {\n      color: theme.palette.text.primary\n    }\n  };\n});\nconst PickersToolbarText = /*#__PURE__*/React.forwardRef(function PickersToolbarText(props, ref) {\n  const {\n      className,\n      selected,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(PickersToolbarTextRoot, _extends({\n    ref: ref,\n    className: clsx(className, selected && classes.selected),\n    component: \"span\"\n  }, other, {\n    children: value\n  }));\n});\nexport default PickersToolbarText;","map":null,"metadata":{},"sourceType":"module"}