{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"date\", \"isLandscape\", \"isMobileKeyboardViewOpen\", \"onChange\", \"toggleMobileKeyboardView\", \"toolbarFormat\", \"toolbarPlaceholder\", \"toolbarTitle\", \"views\"];\nimport * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { styled } from '@material-ui/core/styles';\nimport { generateUtilityClasses } from '@material-ui/unstyled';\nimport PickersToolbar from '../internal/pickers/PickersToolbar';\nimport { useUtils } from '../internal/pickers/hooks/useUtils';\nimport { isYearAndMonthViews, isYearOnlyView } from './shared';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst classes = generateUtilityClasses('PrivateDatePickerToolbar', ['penIcon']);\nconst DatePickerToolbarRoot = styled(PickersToolbar, {\n  skipSx: true\n})({\n  [`& .${classes.penIcon}`]: {\n    position: 'relative',\n    top: 4\n  }\n});\nconst DatePickerToolbarTitle = styled(Typography, {\n  skipSx: true\n})(_ref => {\n  let {\n    styleProps\n  } = _ref;\n  return _extends({}, styleProps.isLandscape && {\n    margin: 'auto 16px auto auto'\n  });\n});\n/**\r\n * @ignore - internal component.\r\n */\n\nconst DatePickerToolbar = /*#__PURE__*/React.forwardRef(function DatePickerToolbar(props, ref) {\n  const {\n      date,\n      isLandscape,\n      isMobileKeyboardViewOpen,\n      toggleMobileKeyboardView,\n      toolbarFormat,\n      toolbarPlaceholder = '––',\n      toolbarTitle = 'SELECT DATE',\n      views\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const utils = useUtils();\n  const dateText = React.useMemo(() => {\n    if (!date) {\n      return toolbarPlaceholder;\n    }\n    if (toolbarFormat) {\n      return utils.formatByString(date, toolbarFormat);\n    }\n    if (isYearOnlyView(views)) {\n      return utils.format(date, 'year');\n    }\n    if (isYearAndMonthViews(views)) {\n      return utils.format(date, 'month');\n    } // Little localization hack (Google is doing the same for android native pickers):\n    // For english localization it is convenient to include weekday into the date \"Mon, Jun 1\".\n    // For other locales using strings like \"June 1\", without weekday.\n\n    return /en/.test(utils.getCurrentLocaleCode()) ? utils.format(date, 'normalDateWithWeekday') : utils.format(date, 'normalDate');\n  }, [date, toolbarFormat, toolbarPlaceholder, utils, views]);\n  const styleProps = props;\n  return /*#__PURE__*/_jsx(DatePickerToolbarRoot, _extends({\n    ref: ref,\n    toolbarTitle: toolbarTitle,\n    isMobileKeyboardViewOpen: isMobileKeyboardViewOpen,\n    toggleMobileKeyboardView: toggleMobileKeyboardView,\n    isLandscape: isLandscape,\n    penIconClassName: classes.penIcon,\n    styleProps: styleProps\n  }, other, {\n    children: /*#__PURE__*/_jsx(DatePickerToolbarTitle, {\n      variant: \"h4\",\n      align: isLandscape ? 'left' : 'center',\n      styleProps: styleProps,\n      children: dateText\n    })\n  }));\n});\nexport default DatePickerToolbar;","map":null,"metadata":{},"sourceType":"module"}