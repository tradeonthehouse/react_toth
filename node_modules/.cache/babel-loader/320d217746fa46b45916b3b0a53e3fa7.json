{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vishal\\\\Desktop\\\\django backend\\\\api-server-django\\\\react-ui\\\\src\\\\views\\\\dashboard\\\\Default\\\\TotalGrowthBarChart.js\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { Grid, MenuItem, TextField, Typography, useTheme } from '@material-ui/core';\n\n// third-party\nimport ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport SkeletonTotalGrowthBarChart from './../../../ui-component/cards/Skeleton/TotalGrowthBarChart';\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport { gridSpacing } from './../../../store/constant';\n\n// chart data\nimport chartData from './chart-data/total-growth-bar-chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst status = [{\n  value: 'today',\n  label: 'Today'\n}, {\n  value: 'month',\n  label: 'This Month'\n}, {\n  value: 'year',\n  label: 'This Year'\n}];\n\n//-----------------------|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||-----------------------//\n\nconst TotalGrowthBarChart = _ref => {\n  _s();\n  let {\n    isLoading\n  } = _ref;\n  const [value, setValue] = React.useState('today');\n  const theme = useTheme();\n  const primary = theme.palette.text.primary;\n  const grey200 = theme.palette.grey[200];\n  const primary200 = theme.palette.primary[200];\n  const primaryDark = theme.palette.primary.dark;\n  const secondaryMain = theme.palette.secondary.main;\n  const secondaryLight = theme.palette.secondary.light;\n  const grey500 = theme.palette.grey[500];\n  React.useEffect(() => {\n    const newChartData = {\n      ...chartData.options,\n      colors: [primary200, primaryDark, secondaryMain, secondaryLight],\n      xaxis: {\n        labels: {\n          style: {\n            colors: [primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary]\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          style: {\n            colors: [primary]\n          }\n        }\n      },\n      grid: {\n        borderColor: grey200\n      },\n      tooltip: {\n        theme: 'light'\n      },\n      legend: {\n        labels: {\n          colors: grey500\n        }\n      }\n    };\n\n    // do not load chart when loading\n    if (!isLoading) {\n      ApexCharts.exec(`bar-chart`, 'updateOptions', newChartData);\n    }\n  }, [primary200, primaryDark, secondaryMain, secondaryLight, primary, grey200, isLoading, grey500]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(SkeletonTotalGrowthBarChart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(MainCard, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: gridSpacing,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"column\",\n                spacing: 1,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    children: \"Total Growth\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h3\",\n                    children: \"$2,324.00\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"standard-select-currency\",\n                select: true,\n                value: value,\n                onChange: e => setValue(e.target.value),\n                children: status.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Chart, {\n            ...chartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(TotalGrowthBarChart, \"ttOIex4sil4J1EOvRlvP8wugBZA=\", false, function () {\n  return [useTheme];\n});\n_c = TotalGrowthBarChart;\nTotalGrowthBarChart.propTypes = {\n  isLoading: PropTypes.bool\n};\nexport default TotalGrowthBarChart;\nvar _c;\n$RefreshReg$(_c, \"TotalGrowthBarChart\");","map":{"version":3,"names":["PropTypes","React","Grid","MenuItem","TextField","Typography","useTheme","ApexCharts","Chart","SkeletonTotalGrowthBarChart","MainCard","gridSpacing","chartData","jsxDEV","_jsxDEV","status","value","label","TotalGrowthBarChart","_ref","_s","isLoading","setValue","useState","theme","primary","palette","text","grey200","grey","primary200","primaryDark","dark","secondaryMain","secondary","main","secondaryLight","light","grey500","useEffect","newChartData","options","colors","xaxis","labels","style","yaxis","grid","borderColor","tooltip","legend","exec","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","alignItems","justifyContent","direction","variant","id","select","onChange","e","target","map","option","_c","propTypes","bool","$RefreshReg$"],"sources":["C:/Users/Vishal/Desktop/django backend/api-server-django/react-ui/src/views/dashboard/Default/TotalGrowthBarChart.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { Grid, MenuItem, TextField, Typography, useTheme } from '@material-ui/core';\n\n// third-party\nimport ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport SkeletonTotalGrowthBarChart from './../../../ui-component/cards/Skeleton/TotalGrowthBarChart';\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport { gridSpacing } from './../../../store/constant';\n\n// chart data\nimport chartData from './chart-data/total-growth-bar-chart';\n\nconst status = [\n    {\n        value: 'today',\n        label: 'Today'\n    },\n    {\n        value: 'month',\n        label: 'This Month'\n    },\n    {\n        value: 'year',\n        label: 'This Year'\n    }\n];\n\n//-----------------------|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||-----------------------//\n\nconst TotalGrowthBarChart = ({ isLoading }) => {\n    const [value, setValue] = React.useState('today');\n    const theme = useTheme();\n\n    const primary = theme.palette.text.primary;\n    const grey200 = theme.palette.grey[200];\n\n    const primary200 = theme.palette.primary[200];\n    const primaryDark = theme.palette.primary.dark;\n    const secondaryMain = theme.palette.secondary.main;\n    const secondaryLight = theme.palette.secondary.light;\n    const grey500 = theme.palette.grey[500];\n\n    React.useEffect(() => {\n        const newChartData = {\n            ...chartData.options,\n            colors: [primary200, primaryDark, secondaryMain, secondaryLight],\n            xaxis: {\n                labels: {\n                    style: {\n                        colors: [primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary]\n                    }\n                }\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        colors: [primary]\n                    }\n                }\n            },\n            grid: {\n                borderColor: grey200\n            },\n            tooltip: {\n                theme: 'light'\n            },\n            legend: {\n                labels: {\n                    colors: grey500\n                }\n            }\n        };\n\n        // do not load chart when loading\n        if (!isLoading) {\n            ApexCharts.exec(`bar-chart`, 'updateOptions', newChartData);\n        }\n    }, [primary200, primaryDark, secondaryMain, secondaryLight, primary, grey200, isLoading, grey500]);\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <SkeletonTotalGrowthBarChart />\n            ) : (\n                <MainCard>\n                    <Grid container spacing={gridSpacing}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                <Grid item>\n                                    <Grid container direction=\"column\" spacing={1}>\n                                        <Grid item>\n                                            <Typography variant=\"subtitle2\">Total Growth</Typography>\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography variant=\"h3\">$2,324.00</Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid item>\n                                    <TextField\n                                        id=\"standard-select-currency\"\n                                        select\n                                        value={value}\n                                        onChange={(e) => setValue(e.target.value)}\n                                    >\n                                        {status.map((option) => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                                {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Chart {...chartData} />\n                        </Grid>\n                    </Grid>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nTotalGrowthBarChart.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalGrowthBarChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}