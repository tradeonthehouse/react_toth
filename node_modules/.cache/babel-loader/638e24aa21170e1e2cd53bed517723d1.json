{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"reduceAnimations\", \"slideDirection\", \"transKey\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@material-ui/core/styles';\nimport { generateUtilityClasses } from '@material-ui/unstyled';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst classes = generateUtilityClasses('PrivatePickersSlideTransition', ['root', 'slideEnter-left', 'slideEnter-right', 'slideEnterActive', 'slideEnterActive', 'slideExit', 'slideExitActiveLeft-left', 'slideExitActiveLeft-right']);\nexport const slideAnimationDuration = 350;\nconst PickersSlideTransitionRoot = styled(TransitionGroup, {\n  skipSx: true\n})(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  const slideTransition = theme.transitions.create('transform', {\n    duration: slideAnimationDuration,\n    easing: 'cubic-bezier(0.35, 0.8, 0.4, 1)'\n  });\n  return {\n    display: 'block',\n    position: 'relative',\n    overflowX: 'hidden',\n    '& > *': {\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      left: 0\n    },\n    [`& .${classes['slideEnter-left']}`]: {\n      willChange: 'transform',\n      transform: 'translate(100%)',\n      zIndex: 1\n    },\n    [`& .${classes['slideEnter-right']}`]: {\n      willChange: 'transform',\n      transform: 'translate(-100%)',\n      zIndex: 1\n    },\n    [`& .${classes.slideEnterActive}`]: {\n      transform: 'translate(0%)',\n      transition: slideTransition\n    },\n    [`& .${classes.slideExit}`]: {\n      transform: 'translate(0%)'\n    },\n    [`& .${classes['slideExitActiveLeft-left']}`]: {\n      willChange: 'transform',\n      transform: 'translate(-100%)',\n      transition: slideTransition,\n      zIndex: 0\n    },\n    [`& .${classes['slideExitActiveLeft-right']}`]: {\n      willChange: 'transform',\n      transform: 'translate(100%)',\n      transition: slideTransition,\n      zIndex: 0\n    }\n  };\n});\n/**\r\n * @ignore - do not document.\r\n */\n\nconst PickersSlideTransition = _ref => {\n  let {\n      children,\n      className,\n      reduceAnimations,\n      slideDirection,\n      transKey\n    } = _ref,\n    other = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (reduceAnimations) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: clsx(classes.root, className),\n      children: children\n    });\n  }\n  const transitionClasses = {\n    exit: classes.slideExit,\n    enterActive: classes.slideEnterActive,\n    enter: classes[`slideEnter-${slideDirection}`],\n    exitActive: classes[`slideExitActiveLeft-${slideDirection}`]\n  };\n  return /*#__PURE__*/_jsx(PickersSlideTransitionRoot, {\n    className: clsx(classes.root, className),\n    childFactory: element => /*#__PURE__*/React.cloneElement(element, {\n      classNames: transitionClasses\n    }),\n    children: /*#__PURE__*/_jsx(CSSTransition, _extends({\n      mountOnEnter: true,\n      unmountOnExit: true,\n      timeout: slideAnimationDuration,\n      classNames: transitionClasses\n    }, other, {\n      children: children\n    }), transKey)\n  });\n};\nexport default PickersSlideTransition;","map":null,"metadata":{},"sourceType":"module"}