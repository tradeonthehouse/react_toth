[{"D:\\new\\latest\\react_toth\\src\\index.js":"1","D:\\new\\latest\\react_toth\\src\\App.js":"2","D:\\new\\latest\\react_toth\\src\\config.js":"3","D:\\new\\latest\\react_toth\\src\\serviceWorker.js":"4","D:\\new\\latest\\react_toth\\src\\store\\index.js":"5","D:\\new\\latest\\react_toth\\src\\layout\\NavigationScroll.js":"6","D:\\new\\latest\\react_toth\\src\\routes\\index.js":"7","D:\\new\\latest\\react_toth\\src\\store\\reducer.js":"8","D:\\new\\latest\\react_toth\\src\\themes\\index.js":"9","D:\\new\\latest\\react_toth\\src\\themes\\typography.js":"10","D:\\new\\latest\\react_toth\\src\\store\\accountReducer.js":"11","D:\\new\\latest\\react_toth\\src\\store\\actions.js":"12","D:\\new\\latest\\react_toth\\src\\themes\\palette.js":"13","D:\\new\\latest\\react_toth\\src\\themes\\compStyleOverride.js":"14","D:\\new\\latest\\react_toth\\src\\store\\customizationReducer.js":"15","D:\\new\\latest\\react_toth\\src\\routes\\AuthenticationRoutes.js":"16","D:\\new\\latest\\react_toth\\src\\routes\\LoginRoutes.js":"17","D:\\new\\latest\\react_toth\\src\\routes\\MainRoutes.js":"18","D:\\new\\latest\\react_toth\\src\\ui-component\\Loadable.js":"19","D:\\new\\latest\\react_toth\\src\\views\\utilities\\BrokersExchanges.js":"20","D:\\new\\latest\\react_toth\\src\\views\\utilities\\CreateBroker.js":"21","D:\\new\\latest\\react_toth\\src\\views\\utilities\\TradingAlgo.js":"22","D:\\new\\latest\\react_toth\\src\\views\\utilities\\EditBroker.js":"23","D:\\new\\latest\\react_toth\\src\\views\\utilities\\uploadFile.js":"24","D:\\new\\latest\\react_toth\\src\\views\\utilities\\TablerIcons.js":"25","D:\\new\\latest\\react_toth\\src\\views\\pages\\authentication\\authentication3\\Register3.js":"26","D:\\new\\latest\\react_toth\\src\\views\\pages\\authentication\\authentication3\\Login3.js":"27","D:\\new\\latest\\react_toth\\src\\views\\utilities\\MaterialIcons.js":"28","D:\\new\\latest\\react_toth\\src\\views\\utilities\\Shadow.js":"29","D:\\new\\latest\\react_toth\\src\\views\\utilities\\Color.js":"30","D:\\new\\latest\\react_toth\\src\\views\\utilities\\Typography.js":"31","D:\\new\\latest\\react_toth\\src\\utils\\route-guard\\AuthGuard.js":"32","D:\\new\\latest\\react_toth\\src\\utils\\route-guard\\GuestGuard.js":"33","D:\\new\\latest\\react_toth\\src\\layout\\NavMotion.js":"34","D:\\new\\latest\\react_toth\\src\\layout\\MinimalLayout\\index.js":"35","D:\\new\\latest\\react_toth\\src\\views\\pages\\authentication\\register\\index.js":"36","D:\\new\\latest\\react_toth\\src\\store\\constant.js":"37","D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\index.js":"38","D:\\new\\latest\\react_toth\\src\\views\\pages\\authentication\\login\\index.js":"39","D:\\new\\latest\\react_toth\\src\\views\\dashboard\\Default\\index.js":"40","D:\\new\\latest\\react_toth\\src\\ui-component\\cards\\CardSecondaryAction.js":"41","D:\\new\\latest\\react_toth\\src\\ui-component\\cards\\MainCard.js":"42","D:\\new\\latest\\react_toth\\src\\ui-component\\cards\\SubCard.js":"43","D:\\new\\latest\\react_toth\\src\\ui-component\\cards\\AuthFooter.js":"44","D:\\new\\latest\\react_toth\\src\\ui-component\\Logo.js":"45","D:\\new\\latest\\react_toth\\src\\views\\pages\\authentication\\register\\RestRegister.js":"46","D:\\new\\latest\\react_toth\\src\\views\\pages\\authentication\\AuthCardWrapper.js":"47","D:\\new\\latest\\react_toth\\src\\views\\pages\\authentication\\AuthWrapper1.js":"48","D:\\new\\latest\\react_toth\\src\\views\\dashboard\\Default\\TopFilter.js":"49","D:\\new\\latest\\react_toth\\src\\views\\dashboard\\Default\\PosValue.js":"50","D:\\new\\latest\\react_toth\\src\\ui-component\\extended\\Avatar.js":"51","D:\\new\\latest\\react_toth\\src\\views\\dashboard\\Default\\CapitalValue.js":"52","D:\\new\\latest\\react_toth\\src\\views\\dashboard\\Default\\DashboardPanels.js":"53","D:\\new\\latest\\react_toth\\src\\views\\dashboard\\Default\\PLValue.js":"54","D:\\new\\latest\\react_toth\\src\\views\\pages\\authentication\\login\\RestLogin.js":"55","D:\\new\\latest\\react_toth\\src\\ui-component\\extended\\Breadcrumbs.js":"56","D:\\new\\latest\\react_toth\\src\\views\\dashboard\\Default\\DeployedStrategies.js":"57","D:\\new\\latest\\react_toth\\src\\layout\\Customization\\index.js":"58","D:\\new\\latest\\react_toth\\src\\views\\pages\\authentication\\firebase-forms\\FirebaseRegister.js":"59","D:\\new\\latest\\react_toth\\src\\views\\pages\\authentication\\firebase-forms\\FirebaseLogin.js":"60","D:\\new\\latest\\react_toth\\src\\utils\\password-strength.js":"61","D:\\new\\latest\\react_toth\\src\\ui-component\\extended\\AnimateButton.js":"62","D:\\new\\latest\\react_toth\\src\\hooks\\useScriptRef.js":"63","D:\\new\\latest\\react_toth\\src\\menu-items\\index.js":"64","D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\Sidebar\\index.js":"65","D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\Header\\index.js":"66","D:\\new\\latest\\react_toth\\src\\ui-component\\cards\\Skeleton\\PopularCard.js":"67","D:\\new\\latest\\react_toth\\src\\ui-component\\cards\\Skeleton\\TotalIncomeCard.js":"68","D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\Header\\SearchSection\\index.js":"69","D:\\new\\latest\\react_toth\\src\\menu-items\\others.js":"70","D:\\new\\latest\\react_toth\\src\\menu-items\\dashboard.js":"71","D:\\new\\latest\\react_toth\\src\\ui-component\\Loader.js":"72","D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\Header\\ProfileSection\\index.js":"73","D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\Sidebar\\MenuCard\\index.js":"74","D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\LogoSection\\index.js":"75","D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\Header\\NotificationSection\\index.js":"76","D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\Sidebar\\MenuList\\index.js":"77","D:\\new\\latest\\react_toth\\src\\ui-component\\extended\\Transitions.js":"78","D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\Header\\NotificationSection\\NotificationList.js":"79","D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\Header\\ProfileSection\\UpgradePlanCard.js":"80","D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\Sidebar\\MenuList\\NavGroup\\index.js":"81","D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\Sidebar\\MenuList\\NavCollapse\\index.js":"82","D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\Sidebar\\MenuList\\NavItem\\index.js":"83","D:\\new\\latest\\react_toth\\src\\views\\utilities\\ProfilePage.js":"84"},{"size":1090,"mtime":1679981086543,"results":"85","hashOfConfig":"86"},{"size":894,"mtime":1679981086468,"results":"87","hashOfConfig":"86"},{"size":572,"mtime":1679981086543,"results":"88","hashOfConfig":"86"},{"size":5911,"mtime":1679981086564,"results":"89","hashOfConfig":"86"},{"size":308,"mtime":1679981086566,"results":"90","hashOfConfig":"86"},{"size":621,"mtime":1679981086554,"results":"91","hashOfConfig":"86"},{"size":867,"mtime":1679981086563,"results":"92","hashOfConfig":"86"},{"size":624,"mtime":1679981086566,"results":"93","hashOfConfig":"86"},{"size":1698,"mtime":1679981086567,"results":"94","hashOfConfig":"86"},{"size":3512,"mtime":1679981086568,"results":"95","hashOfConfig":"86"},{"size":1173,"mtime":1679981086564,"results":"96","hashOfConfig":"86"},{"size":429,"mtime":1679981086565,"results":"97","hashOfConfig":"86"},{"size":2083,"mtime":1679981086568,"results":"98","hashOfConfig":"86"},{"size":6001,"mtime":1679981086567,"results":"99","hashOfConfig":"86"},{"size":1198,"mtime":1679981086566,"results":"100","hashOfConfig":"86"},{"size":1126,"mtime":1679981086562,"results":"101","hashOfConfig":"86"},{"size":1262,"mtime":1679981086562,"results":"102","hashOfConfig":"86"},{"size":3424,"mtime":1680007916440,"results":"103","hashOfConfig":"86"},{"size":348,"mtime":1679981086569,"results":"104","hashOfConfig":"86"},{"size":7734,"mtime":1680007715388,"results":"105","hashOfConfig":"86"},{"size":13928,"mtime":1679981086603,"results":"106","hashOfConfig":"86"},{"size":25323,"mtime":1679981086613,"results":"107","hashOfConfig":"86"},{"size":14209,"mtime":1679981086603,"results":"108","hashOfConfig":"86"},{"size":8141,"mtime":1680007305188,"results":"109","hashOfConfig":"86"},{"size":1036,"mtime":1679981086612,"results":"110","hashOfConfig":"86"},{"size":4694,"mtime":1679981086590,"results":"111","hashOfConfig":"86"},{"size":4709,"mtime":1679981086589,"results":"112","hashOfConfig":"86"},{"size":1196,"mtime":1679981086604,"results":"113","hashOfConfig":"86"},{"size":6004,"mtime":1679981086604,"results":"114","hashOfConfig":"86"},{"size":18018,"mtime":1679981086602,"results":"115","hashOfConfig":"86"},{"size":6035,"mtime":1679981086613,"results":"116","hashOfConfig":"86"},{"size":661,"mtime":1679981086577,"results":"117","hashOfConfig":"86"},{"size":749,"mtime":1679981086577,"results":"118","hashOfConfig":"86"},{"size":920,"mtime":1679981086554,"results":"119","hashOfConfig":"86"},{"size":486,"mtime":1679981086554,"results":"120","hashOfConfig":"86"},{"size":4651,"mtime":1679981086601,"results":"121","hashOfConfig":"86"},{"size":119,"mtime":1679981086565,"results":"122","hashOfConfig":"86"},{"size":4493,"mtime":1679981086553,"results":"123","hashOfConfig":"86"},{"size":4650,"mtime":1679981086600,"results":"124","hashOfConfig":"86"},{"size":2087,"mtime":1679981086587,"results":"125","hashOfConfig":"86"},{"size":2726,"mtime":1679981086570,"results":"126","hashOfConfig":"86"},{"size":2542,"mtime":1679981086571,"results":"127","hashOfConfig":"86"},{"size":2112,"mtime":1679981086573,"results":"128","hashOfConfig":"86"},{"size":365,"mtime":1679981086570,"results":"129","hashOfConfig":"86"},{"size":546,"mtime":1679981086569,"results":"130","hashOfConfig":"86"},{"size":14249,"mtime":1679981086600,"results":"131","hashOfConfig":"86"},{"size":1219,"mtime":1679981086588,"results":"132","hashOfConfig":"86"},{"size":316,"mtime":1679981086588,"results":"133","hashOfConfig":"86"},{"size":3245,"mtime":1679981086581,"results":"134","hashOfConfig":"86"},{"size":3192,"mtime":1679981086581,"results":"135","hashOfConfig":"86"},{"size":3814,"mtime":1679981086574,"results":"136","hashOfConfig":"86"},{"size":3200,"mtime":1679981086578,"results":"137","hashOfConfig":"86"},{"size":10975,"mtime":1679981086579,"results":"138","hashOfConfig":"86"},{"size":3181,"mtime":1679981086580,"results":"139","hashOfConfig":"86"},{"size":11311,"mtime":1679981086599,"results":"140","hashOfConfig":"86"},{"size":7478,"mtime":1679981086575,"results":"141","hashOfConfig":"86"},{"size":9343,"mtime":1679981086580,"results":"142","hashOfConfig":"86"},{"size":8797,"mtime":1679981086544,"results":"143","hashOfConfig":"86"},{"size":15678,"mtime":1679981086598,"results":"144","hashOfConfig":"86"},{"size":12765,"mtime":1679981086597,"results":"145","hashOfConfig":"86"},{"size":1263,"mtime":1679981086576,"results":"146","hashOfConfig":"86"},{"size":2761,"mtime":1679981086574,"results":"147","hashOfConfig":"86"},{"size":368,"mtime":1679981086543,"results":"148","hashOfConfig":"86"},{"size":236,"mtime":1679985315507,"results":"149","hashOfConfig":"86"},{"size":3194,"mtime":1679981086553,"results":"150","hashOfConfig":"86"},{"size":2385,"mtime":1679981086548,"results":"151","hashOfConfig":"86"},{"size":8917,"mtime":1679981086572,"results":"152","hashOfConfig":"86"},{"size":1387,"mtime":1679981086573,"results":"153","hashOfConfig":"86"},{"size":9752,"mtime":1679981086548,"results":"154","hashOfConfig":"86"},{"size":2108,"mtime":1679985511827,"results":"155","hashOfConfig":"86"},{"size":609,"mtime":1679981773545,"results":"156","hashOfConfig":"86"},{"size":722,"mtime":1679981086569,"results":"157","hashOfConfig":"86"},{"size":14689,"mtime":1680007973072,"results":"158","hashOfConfig":"86"},{"size":3205,"mtime":1679981086550,"results":"159","hashOfConfig":"86"},{"size":529,"mtime":1679981086549,"results":"160","hashOfConfig":"86"},{"size":10037,"mtime":1679981086546,"results":"161","hashOfConfig":"86"},{"size":793,"mtime":1679981086552,"results":"162","hashOfConfig":"86"},{"size":3119,"mtime":1679981086575,"results":"163","hashOfConfig":"86"},{"size":12625,"mtime":1679981086545,"results":"164","hashOfConfig":"86"},{"size":3237,"mtime":1679981086547,"results":"165","hashOfConfig":"86"},{"size":2285,"mtime":1679981086551,"results":"166","hashOfConfig":"86"},{"size":5342,"mtime":1679981086551,"results":"167","hashOfConfig":"86"},{"size":4819,"mtime":1679981086552,"results":"168","hashOfConfig":"86"},{"size":1942,"mtime":1680007998485,"results":"169","hashOfConfig":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},"1elr45g",{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"172"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"172"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"172"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"172"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"172"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"172"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"172"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"172"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"172"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"172"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"172"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"172"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"172"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"172"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356"},"D:\\new\\latest\\react_toth\\src\\index.js",[],["357","358"],"D:\\new\\latest\\react_toth\\src\\App.js",[],"D:\\new\\latest\\react_toth\\src\\config.js",[],"D:\\new\\latest\\react_toth\\src\\serviceWorker.js",[],"D:\\new\\latest\\react_toth\\src\\store\\index.js",[],"D:\\new\\latest\\react_toth\\src\\layout\\NavigationScroll.js",[],"D:\\new\\latest\\react_toth\\src\\routes\\index.js",[],"D:\\new\\latest\\react_toth\\src\\store\\reducer.js",[],"D:\\new\\latest\\react_toth\\src\\themes\\index.js",[],"D:\\new\\latest\\react_toth\\src\\themes\\typography.js",[],"D:\\new\\latest\\react_toth\\src\\store\\accountReducer.js",[],"D:\\new\\latest\\react_toth\\src\\store\\actions.js",[],"D:\\new\\latest\\react_toth\\src\\themes\\palette.js",[],"D:\\new\\latest\\react_toth\\src\\themes\\compStyleOverride.js",[],"D:\\new\\latest\\react_toth\\src\\store\\customizationReducer.js",[],"D:\\new\\latest\\react_toth\\src\\routes\\AuthenticationRoutes.js",[],"D:\\new\\latest\\react_toth\\src\\routes\\LoginRoutes.js",[],"D:\\new\\latest\\react_toth\\src\\routes\\MainRoutes.js",[],"D:\\new\\latest\\react_toth\\src\\ui-component\\Loadable.js",[],"D:\\new\\latest\\react_toth\\src\\views\\utilities\\BrokersExchanges.js",["359","360","361","362"],"import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { IconEdit, IconFileDownload, IconSquarePlus } from '@tabler/icons';\r\nimport { Link, Avatar, Button, CardActions, CardContent, Divider, Grid, Menu, MenuItem, Typography } from '@material-ui/core';\r\n\r\n// project imports\r\nimport MainCard from './../../ui-component/cards/MainCard';\r\nimport { gridSpacing } from './../../store/constant';\r\n\r\n// assets\r\nimport MoreHorizOutlinedIcon from '@material-ui/icons/MoreHorizOutlined';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardAction: {\r\n        padding: '10px',\r\n        paddingTop: 0,\r\n        justifyContent: 'center'\r\n    },\r\n    primaryLight: {\r\n        color: theme.palette.primary[200],\r\n        cursor: 'pointer'\r\n    },\r\n    divider: {\r\n        marginTop: '12px',\r\n        marginBottom: '12px'\r\n    },\r\n    avatarSuccess: {\r\n        width: '16px',\r\n        height: '16px',\r\n        borderRadius: '5px',\r\n        backgroundColor: theme.palette.success.light,\r\n        color: theme.palette.success.dark,\r\n        marginLeft: '15px'\r\n    },\r\n    successDark: {\r\n        color: theme.palette.success.dark\r\n    },\r\n    avatarError: {\r\n        width: '16px',\r\n        height: '16px',\r\n        borderRadius: '5px',\r\n        backgroundColor: theme.palette.orange.light,\r\n        color: theme.palette.orange.dark,\r\n        marginLeft: '15px'\r\n    },\r\n    errorDark: {\r\n        color: theme.palette.orange.dark\r\n    }\r\n}));\r\n\r\n//-----------------------|| DASHBOARD DEFAULT - POPULAR CARD ||-----------------------//\r\n\r\nconst BrokersExchanges = ({ isLoading }) => {\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n                <MainCard content={false}>\r\n                    <CardContent>\r\n                        <Grid container spacing={gridSpacing}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\r\n                                    <Grid item>\r\n                                        <Typography variant=\"h4\">List of Brokers</Typography>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Link href=\"/utils/create-broker\" color=\"inherit\" style={{textDecoration: 'none'}}><Button size=\"small\" variant=\"outlined\" component=\"label\" style={{marginRight:30,marginTop:-10}}>Add Broker</Button></Link>\r\n                                        <MoreHorizOutlinedIcon\r\n                                            fontSize=\"small\"\r\n                                            className={classes.primaryLight}\r\n                                            aria-controls=\"menu-popular-card\"\r\n                                            aria-haspopup=\"true\"\r\n                                            onClick={handleClick}\r\n                                        />\r\n                                        <Menu\r\n                                            id=\"menu-popular-card\"\r\n                                            anchorEl={anchorEl}\r\n                                            keepMounted\r\n                                            open={Boolean(anchorEl)}\r\n                                            onClose={handleClose}\r\n                                            variant=\"selectedMenu\"\r\n                                            anchorOrigin={{\r\n                                                vertical: 'bottom',\r\n                                                horizontal: 'right'\r\n                                            }}\r\n                                            transformOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'right'   \r\n                                            }}\r\n                                        >\r\n                                                       \r\n                                            <MenuItem onClick={handleClose} > EXPORT AS CSV</MenuItem>\r\n                                        </Menu>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Divider className={classes.divider} />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container direction=\"column\">\r\n                                    <Grid container spacing={gridSpacing}>\r\n                                        <Grid item lg={3} md={6} sm={6} xs={12}>\r\n                                            <Typography variant=\"subtitle1\" color=\"inherit\">Broker Name</Typography>\r\n                                        </Grid>\r\n                                        <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                                            <Typography variant=\"subtitle1\" color=\"inherit\">Exchanges</Typography>\r\n                                        </Grid>\r\n                                        <Grid item lg={3} md={6} sm={6} xs={12}>\r\n                                            <Typography variant=\"subtitle1\" color=\"inherit\">Info</Typography>\r\n                                        </Grid>\r\n                                        <Grid item lg={2} md={6} sm={6} xs={12}>\r\n                                            <Typography variant=\"subtitle1\" color=\"inherit\">Action</Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Divider className={classes.divider} />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container direction=\"column\">\r\n                                    <Grid container spacing={gridSpacing}>\r\n                                        <Grid item lg={3} md={6} sm={6} xs={12}>\r\n                                            <Typography variant=\"subtitle2\" color=\"inherit\">TT Paper Trading</Typography>\r\n                                        </Grid>\r\n                                        <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                                            <Typography variant=\"subtitle2\" color=\"inherit\">BITBNS, CDS, Crypto, FX, MCX, NASDAQ-EQ, NFO, NSE, NSE_IDX</Typography>\r\n                                        </Grid>\r\n                                        <Grid item lg={3} md={6} sm={6} xs={12}>\r\n                                            <Typography variant=\"subtitle2\" color=\"inherit\"></Typography>\r\n                                        </Grid>\r\n                                        <Grid item lg={2} md={6} sm={6} xs={12}>\r\n                                            <Link href=\"/utils/edit-broker\" color=\"inherit\" style={{textDecoration: 'none'}}><Typography variant=\"subtitle2\" color=\"inherit\"><IconEdit /></Typography></Link>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Divider className={classes.divider} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </MainCard>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nBrokersExchanges.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default BrokersExchanges;\r\n","D:\\new\\latest\\react_toth\\src\\views\\utilities\\CreateBroker.js",["363","364","365","366","367","368","369","370","371","372","373","374","375","376","377"],"import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { IconEdit, IconFileDownload, IconSquarePlus } from '@tabler/icons';\r\nimport { Avatar, Button, CardActions, CardContent, Divider, Grid, Menu, MenuItem, Typography, TextField, Chip } from '@material-ui/core';\r\n\r\n// project imports\r\nimport MainCard from './../../ui-component/cards/MainCard';\r\nimport { gridSpacing } from './../../store/constant';\r\n\r\n// assets\r\nimport MoreHorizOutlinedIcon from '@material-ui/icons/MoreHorizOutlined';\r\n\r\nimport { createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport _without from \"lodash/without\";\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n        // redBackground: {\r\n        //   backgroundColor: \"#C00\",\r\n        //   padding: 10\r\n        // },\r\n        whiteBackground: {\r\n          backgroundColor: \"#FFF\"\r\n        },\r\n        formControl: {\r\n          margin: theme.spacing(1),\r\n          minWidth: 120,\r\n          maxWidth: 300\r\n        },\r\n        chips: {\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\"\r\n        },\r\n        chip: {\r\n          margin: 2,\r\n          backgroundColor: \"#FFF\"\r\n        },\r\n        noLabel: {\r\n          marginTop: theme.spacing(3)\r\n        }, \r\n    cardAction: {\r\n        padding: '10px',\r\n        paddingTop: 0,\r\n        justifyContent: 'center'\r\n    },\r\n    primaryLight: {\r\n        color: theme.palette.primary[200],\r\n        cursor: 'pointer'\r\n    },\r\n    divider: {\r\n        marginTop: '12px',\r\n        marginBottom: '12px'\r\n    },\r\n    avatarSuccess: {\r\n        width: '16px',\r\n        height: '16px',\r\n        borderRadius: '5px',\r\n        backgroundColor: theme.palette.success.light,\r\n        color: theme.palette.success.dark,\r\n        marginLeft: '15px'\r\n    },\r\n    successDark: {\r\n        color: theme.palette.success.dark\r\n    },\r\n    avatarError: {\r\n        width: '16px',\r\n        height: '16px',\r\n        borderRadius: '5px',\r\n        backgroundColor: theme.palette.orange.light,\r\n        color: theme.palette.orange.dark,\r\n        marginLeft: '15px'\r\n    },\r\n    errorDark: {\r\n        color: theme.palette.orange.dark\r\n    }\r\n}));\r\n\r\nconst Brokers = [\r\n    {\r\n        value: 'none',\r\n        label: 'Select Broker'\r\n    },\r\n    {\r\n        value: 'zerodha',\r\n        label: 'Zerodha'\r\n    },\r\n    {\r\n        value: 'upstox',\r\n        label: 'Upstox'\r\n    },\r\n];\r\n\r\nconst Exchanges = [\r\n   \"BITBNS (INR (₹))\",\r\n   \"CDS (INR (₹))\",\r\n   \"Cryto (USD ($))\",\r\n   \"FX (USD ($))\",\r\n   \"MCX (INR (₹))\",\r\n   \"NASDAQ-EQ (USD ($))\",\r\n   \"NFO (INR (₹))\",\r\n   \"NSE (INR (₹))\",\r\n   \"NSE_IDX (INR (₹))\"\r\n];\r\n\r\nconst initialSelected = [\r\n    \"CDS (INR (₹))\",\r\n    \"MCX (INR (₹))\",\r\n    \"NFO (INR (₹))\",\r\n    \"NSE (INR (₹))\",\r\n]\r\n  \r\n\r\n//-----------------------|| DASHBOARD DEFAULT - POPULAR CARD ||-----------------------//\r\n\r\nconst CreateBroker = ({ isLoading }) => {\r\n    const classes = useStyles();\r\n    const [brokerValue, setBrokerValue] = React.useState('none');\r\n    const [ExchangeName, setExchangesName] = React.useState([]);\r\n    const [fieldFlag, setFieldFlag] = React.useState(false);\r\n\r\n    const handleBroker = (event) => {\r\n        if(event.target.value == \"zerodha\" || event.target.value == \"upstox\"){\r\n            setFieldFlag(true)\r\n        }else{\r\n            setFieldFlag(false)\r\n        }\r\n        setBrokerValue(event.target.value)\r\n    }\r\n  \r\n    const handleChange = (event) => {\r\n        setExchangesName(event.target.value);\r\n    };\r\n  \r\n    const handleDelete = (e: React.MouseEvent,value) => {\r\n        setExchangesName((current) => _without(current, value));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n                <MainCard content={false}>\r\n                    <CardContent>\r\n                        <Grid container spacing={gridSpacing}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\r\n                                    <Grid item>\r\n                                        <Typography variant=\"h4\">Add Broker</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Divider className={classes.divider} />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container direction=\"column\">\r\n                                    <Grid container spacing={gridSpacing}>\r\n                                        <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                                            <Typography variant=\"subtitle1\" color=\"inherit\">Select Broker</Typography>\r\n                                            <TextField\r\n                                                id=\"standard-select-currency\"\r\n                                                select\r\n                                                value={brokerValue}\r\n                                                size=\"small\"\r\n                                                onChange={(e) => handleBroker(e)}\r\n                                                style={{width:250,marginTop:8}}>\r\n                                                    {Brokers.map((option) => (\r\n                                                        <MenuItem key={option.value} value={option.value}>\r\n                                                            {option.label}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                            </TextField>\r\n                                        </Grid>\r\n                                        <Grid item lg={6} md={6} sm={6} xs={12}>\r\n                                            <Typography variant=\"subtitle1\" color=\"inherit\">Exchanges</Typography>\r\n                                            <div className={classes.redBackground}>\r\n                                                <FormControl className={classes.formControl}>\r\n                                                    <Select\r\n                                                        size=\"small\"\r\n                                                        style={{width:350}}\r\n                                                        labelId=\"demo-mutiple-chip-checkbox-label\"\r\n                                                        id=\"demo-mutiple-chip-checkbox\"\r\n                                                        multiple\r\n                                                        value={ExchangeName}\r\n                                                        onChange={handleChange}\r\n                                                        IconComponent={KeyboardArrowDownIcon}\r\n                                                        renderValue={(selected) => (\r\n                                                        <div className={classes.chips}>\r\n                                                            {selected.map((value) => (\r\n                                                                <Chip\r\n                                                                    key={value}\r\n                                                                    label={value}\r\n                                                                    clickable\r\n                                                                    variant=\"outlined\"\r\n                                                                    deleteIcon={\r\n                                                                    <CancelIcon\r\n                                                                        onMouseDown={(event) => event.stopPropagation()}\r\n                                                                    />\r\n                                                                    }\r\n                                                                    className={classes.chip}\r\n                                                                    onDelete={(e) => handleDelete(e, value)}\r\n                                                                />\r\n                                                            ))}\r\n                                                        </div>\r\n                                                        )}>\r\n                                                        {Exchanges.map((name) => (\r\n                                                            <MenuItem key={name} value={name}>\r\n                                                                {name}\r\n                                                            </MenuItem>\r\n                                                        ))}\r\n                                                     </Select>\r\n                                                </FormControl>\r\n                                            </div>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Divider className={classes.divider} />\r\n                            </Grid>\r\n                            {fieldFlag && ( \r\n                                <div style={{marginLeft:25}}>                    \r\n                                    <Grid item xs={12}>\r\n                                        <Grid container direction=\"column\">\r\n                                            <Grid container spacing={gridSpacing}>\r\n                                                <Grid item lg={6} md={6} sm={6} xs={12}>\r\n                                                    <Typography variant=\"subtitle1\" color=\"inherit\">Setup Link : </Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Divider className={classes.divider} />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid container direction=\"column\">\r\n                                            <Grid container spacing={gridSpacing}>\r\n                                                <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                                                    <Typography variant=\"subtitle1\" color=\"inherit\">api_key</Typography>\r\n                                                    <TextField\r\n                                                        id=\"api_key\"\r\n                                                        size=\"small\"\r\n                                                        style={{width:250,marginTop:8}}>\r\n                                                    </TextField>\r\n                                                </Grid>\r\n                                                <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">api_secret</Typography>\r\n                                                <TextField\r\n                                                        id=\"api_secret\"\r\n                                                        size=\"small\"\r\n                                                        style={{width:250,marginTop:8}}>\r\n                                                    </TextField>\r\n                                                </Grid>\r\n                                                <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">token</Typography>\r\n                                                <TextField\r\n                                                        id=\"token\"\r\n                                                        size=\"small\"\r\n                                                        style={{width:250,marginTop:8}}>\r\n                                                    </TextField>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Divider className={classes.divider} />\r\n                                    </Grid>\r\n                                </div> \r\n                            )}  \r\n                            <Grid item xs={12}>\r\n                                <Grid container direction=\"column\">\r\n                                    <Grid container spacing={gridSpacing}>\r\n                                        <Grid xs={2}>\r\n                                            <Button href=\"/utils/brokers-and-exchanges\" color=\"error\" variant=\"contained\" style={{width:120,marginLeft:25,marginTop:10}}>Back</Button>\r\n                                        </Grid>\r\n                                        <Grid xs={2}>\r\n                                            <Button color=\"secondary\" variant=\"contained\" style={{width:120,marginLeft:0,marginTop:10}}>Save</Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </MainCard>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nCreateBroker.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default CreateBroker;\r\n","D:\\new\\latest\\react_toth\\src\\views\\utilities\\TradingAlgo.js",["378","379","380","381","382","383","384","385","386","387"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport configData from '../../config';\r\nimport SearchSection from './../../layout/MainLayout/Header/SearchSection';\r\n\r\n// material-ui\r\nimport {\r\n    Button,\r\n    Grid,\r\n    TextField,\r\n    Typography,\r\n    Chip,\r\n    Divider,\r\n    Tooltip,\r\n    Box\r\n} from '@material-ui/core';\r\nimport { List, ListItem, RadioGroup, FormControlLabel, FormControl, FormLabel, ListItemButton, ListItemIcon, ListItemText, Radio, InputAdornment, OutlinedInput, Popper, Checkbox } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { gridSpacing } from './../../store/constant';\r\nimport { IconAdjustmentsHorizontal, IconSearch, IconX, IconInfoCircle, IconHeart } from '@tabler/icons';\r\n// import { FixedSizeList } from 'react-window';\r\n\r\n// project imports\r\nimport MainCard from '../../ui-component/cards/MainCard';\r\n\r\n//==============================|| SAMPLE PAGE ||==============================//\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        padding: '16px !important'\r\n    },\r\n    avatar: {\r\n        ...theme.typography.commonAvatar,\r\n        ...theme.typography.largeAvatar,\r\n        backgroundColor: theme.palette.warning.light,\r\n        color: theme.palette.warning.dark\r\n    },\r\n    secondary: {\r\n        color: theme.palette.grey[500],\r\n        marginTop: '5px'\r\n    },\r\n    padding: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0\r\n    }\r\n}));\r\n\r\nconst selected = [\r\n    \"NFO\",\r\n    \"EarnTheta\",\r\n    \"EarnTheta\",\r\n    \"TrendFollowing\",\r\n ];\r\n\r\nconst label = { inputProps: { 'aria-label': 'Checkbox demo' } };\r\n\r\nconst TradingAlgo = () => {\r\n    const classes = useStyles();\r\n    const [likeflag,setLikeFlag] = React.useState(false);\r\n    const [value, setValue] = useState('');\r\n    const [checked, setChecked] = React.useState([0]);\r\n\r\n    const handleToggle = (value) => () => {\r\n      const currentIndex = checked.indexOf(value);\r\n      const newChecked = [...checked];\r\n  \r\n      if (currentIndex === -1) {\r\n        newChecked.push(value);\r\n      } else {\r\n        newChecked.splice(currentIndex, 1);\r\n      }\r\n  \r\n      setChecked(newChecked);\r\n    };\r\n  \r\n\r\n    return (\r\n        <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item lg={8} md={6} sm={6} xs={12}>\r\n                        <MainCard className={classes.card} contentClass={classes.content}>\r\n                            <Grid container direction=\"column\">\r\n                                <Grid container spacing={gridSpacing}>\r\n                                    <Grid item xs={12}>\r\n                                       <Grid container spacing={gridSpacing}>\r\n                                          <Grid item xs={10}>\r\n                                             <Typography variant=\"subtitle2\" color=\"inherit\">created : 1 year ago  |  live deployment: 390</Typography>\r\n                                              <Typography  ypography style={{marginTop:10}} variant=\"h3\" color=\"inherit\">Index Premium Eater</Typography>\r\n                                          </Grid>\r\n                                          <Grid item xs={2}>\r\n                                            <div style={{marginLeft:52,marginTop:-18,background:\"#B39DDB\",width:55,height:50,paddingLeft:10,paddingRight:10,paddingTop:0.1,borderRadius:5}}>\r\n                                                {likeflag && (\r\n                                                  <IconHeart onClick={() => setLikeFlag(false)} color='white' fill=\"Orange\" style={{marginTop:10,marginLeft:2,strokeWidth:0.5}} size={30}/>\r\n                                                )}\r\n                                                {!likeflag && (\r\n                                                  <IconHeart onClick={() => setLikeFlag(true)} color='white' fill=\"none\" style={{marginTop:10,marginLeft:2,strokeWidth:1}} size={30}/>\r\n                                                )}\r\n                                            </div>\r\n                                          </Grid>\r\n                                       </Grid>\r\n                                       <Grid container spacing={gridSpacing}>\r\n                                          <Grid item xs={11}>\r\n                                             <Typography style={{marginTop:3}} variant=\"subtitle1\" color=\"primary\">Read More...</Typography>\r\n                                             <Typography style={{marginTop:10}} variant=\"h4\" color=\"inherit\">by : Market Star</Typography>\r\n                                          </Grid>\r\n                                       </Grid>\r\n                                       <Grid container spacing={gridSpacing}>\r\n                                          <Grid item xs={8}>\r\n                                                {selected.map((value) => (\r\n                                                        <Chip\r\n                                                            key={value}\r\n                                                            label={value}\r\n                                                            clickable\r\n                                                            color=\"primary\"\r\n                                                            style={{marginLeft:8,marginTop:10}}\r\n                                                            className={classes.chip}\r\n                                                        />\r\n                                                ))}\r\n                                          </Grid>\r\n                                          <Grid item xs={1}></Grid>\r\n                                          <Grid item xs={3}>\r\n                                              <Button color=\"secondary\" variant=\"outlined\" style={{width:120,marginLeft:25,fontWeight:700,marginTop:10}}>Subscribe</Button>\r\n                                          </Grid>\r\n                                       </Grid>\r\n                                       <Grid container spacing={gridSpacing} style={{marginTop:-10}}>\r\n                                          <Grid item xs={3}>\r\n                                          <Tooltip title=\"In last month\" placement=\"top\"><Typography style={{marginTop:10}} variant=\"subtitle2\" color=\"inherit\">Trades/~Costs <IconInfoCircle size={15}/> </Typography></Tooltip>                                   \r\n                                          <Typography style={{marginTop:2}} variant=\"h5\" color=\"inherit\">312 (₹ 6.2 K)</Typography>\r\n                                          </Grid>\r\n                                          <Grid item xs={3}>\r\n                                          <Tooltip title=\"Absolute Max. Drawdown (% of Min. Capital)\" placement=\"top\"><Typography style={{marginTop:10}} variant=\"subtitle2\" color=\"inherit\">Drawdown <IconInfoCircle size={15}/></Typography></Tooltip>\r\n                                          <Typography style={{marginTop:2}} variant=\"h5\" color=\"inherit\">₹ 18.6 K (6%)</Typography>\r\n                                          </Grid>\r\n                                          <Grid item xs={3}>\r\n                                          <Typography style={{marginTop:10}} variant=\"subtitle2\" color=\"inherit\">Min Capital</Typography>\r\n                                          <Typography style={{marginTop:2}} variant=\"h5\" color=\"inherit\">₹ 310 K</Typography>\r\n                                          </Grid>\r\n                                          <Grid item xs={3}>\r\n                                          <Tooltip title=\"Profit sharing monthly\" placement=\"top\"><Typography style={{marginTop:10}} variant=\"subtitle2\" color=\"inherit\">Monthly Fee <IconInfoCircle size={15}/></Typography></Tooltip>\r\n                                          <Typography style={{marginTop:2}} variant=\"h5\" color=\"inherit\">Free + 5%  </Typography>\r\n                                          </Grid>\r\n                                       </Grid>\r\n                                                                                                   \r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </MainCard>\r\n                        <MainCard className={classes.card} contentClass={classes.content} style={{marginTop:10}}>\r\n                            <Grid container direction=\"column\">\r\n                                <Grid container spacing={gridSpacing}>\r\n                                    <Grid item xs={12}>\r\n                                       <Grid container spacing={gridSpacing}>\r\n                                          <Grid item xs={10}>\r\n                                             <Typography variant=\"subtitle2\" color=\"inherit\">created : 1 year ago  |  live deployment: 377</Typography>\r\n                                              <Typography  ypography style={{marginTop:10}} variant=\"h3\" color=\"inherit\">Passive Income Earner</Typography>\r\n                                          </Grid>\r\n                                          <Grid item xs={2}>\r\n                                            <div style={{marginLeft:52,marginTop:-18,background:\"#B39DDB\",width:55,height:50,paddingLeft:10,paddingRight:10,paddingTop:0.1,borderRadius:5}}>\r\n                                                {likeflag && (\r\n                                                  <IconHeart onClick={() => setLikeFlag(false)} color='white' fill=\"Orange\" style={{marginTop:10,marginLeft:2,strokeWidth:0.5}} size={30}/>\r\n                                                )}\r\n                                                {!likeflag && (\r\n                                                  <IconHeart onClick={() => setLikeFlag(true)} color='white' fill=\"none\" style={{marginTop:10,marginLeft:2,strokeWidth:1}} size={30}/>\r\n                                                )}\r\n                                            </div>\r\n                                          </Grid>\r\n                                       </Grid>\r\n                                       <Grid container spacing={gridSpacing}>\r\n                                          <Grid item xs={11}>\r\n                                             <Typography style={{marginTop:3}} variant=\"subtitle1\" color=\"primary\">Read More...</Typography>\r\n                                             <Typography style={{marginTop:10}} variant=\"h4\" color=\"inherit\">by : Algo Edge Capital</Typography>\r\n                                          </Grid>\r\n                                       </Grid>\r\n                                       <Grid container spacing={gridSpacing}>\r\n                                          <Grid item xs={8}>\r\n                                                {selected.map((value) => (\r\n                                                        <Chip\r\n                                                            key={value}\r\n                                                            label={value}\r\n                                                            clickable\r\n                                                            color=\"primary\"\r\n                                                            style={{marginLeft:8,marginTop:10}}\r\n                                                            className={classes.chip}\r\n                                                        />\r\n                                                ))}\r\n                                          </Grid>\r\n                                          <Grid item xs={1}></Grid>\r\n                                          <Grid item xs={3}>\r\n                                              <Button color=\"secondary\" variant=\"outlined\" style={{width:120,marginLeft:25,fontWeight:700,marginTop:10}}>Subscribe</Button>\r\n                                          </Grid>\r\n                                       </Grid>\r\n                                       <Grid container spacing={gridSpacing} style={{marginTop:-10}}>\r\n                                          <Grid item xs={3}>\r\n                                          <Tooltip title=\"In last month\" placement=\"top\"><Typography style={{marginTop:10}} variant=\"subtitle2\" color=\"inherit\">Trades/~Costs <IconInfoCircle size={15}/> </Typography></Tooltip>                                   \r\n                                          <Typography style={{marginTop:2}} variant=\"h5\" color=\"inherit\">310 (₹ 6.2 K)</Typography>\r\n                                          </Grid>\r\n                                          <Grid item xs={3}>\r\n                                          <Tooltip title=\"Absolute Max. Drawdown (% of Min. Capital)\" placement=\"top\"><Typography style={{marginTop:10}} variant=\"subtitle2\" color=\"inherit\">Drawdown <IconInfoCircle size={15}/></Typography></Tooltip>\r\n                                          <Typography style={{marginTop:2}} variant=\"h5\" color=\"inherit\">₹ 19.2 K (6%)</Typography>\r\n                                          </Grid>\r\n                                          <Grid item xs={3}>\r\n                                          <Typography style={{marginTop:10}} variant=\"subtitle2\" color=\"inherit\">Min Capital</Typography>\r\n                                          <Typography style={{marginTop:2}} variant=\"h5\" color=\"inherit\">₹ 310 K</Typography>\r\n                                          </Grid>\r\n                                          <Grid item xs={3}>\r\n                                          <Tooltip title=\"Profit sharing monthly\" placement=\"top\"><Typography style={{marginTop:10}} variant=\"subtitle2\" color=\"inherit\">Monthly Fee <IconInfoCircle size={15}/></Typography></Tooltip>\r\n                                          <Typography style={{marginTop:2}} variant=\"h5\" color=\"inherit\">Free + 5%</Typography>\r\n                                          </Grid>\r\n                                       </Grid>\r\n                                                                                                   \r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </MainCard>\r\n                        <MainCard className={classes.card} contentClass={classes.content} style={{marginTop:10}}>\r\n                            <Grid container direction=\"column\">\r\n                                <Grid container spacing={gridSpacing}>\r\n                                    <Grid item xs={12}>\r\n                                       <Grid container spacing={gridSpacing}>\r\n                                          <Grid item xs={10}>\r\n                                             <Typography variant=\"subtitle2\" color=\"inherit\">created : 1 year ago  |  live deployment: 255</Typography>\r\n                                              <Typography  ypography style={{marginTop:10}} variant=\"h3\" color=\"inherit\">Bank Nifty Dynamic Earner</Typography>\r\n                                          </Grid>\r\n                                          <Grid item xs={2}>\r\n                                            <div style={{marginLeft:52,marginTop:-18,background:\"#B39DDB\",width:55,height:50,paddingLeft:10,paddingRight:10,paddingTop:0.1,borderRadius:5}}>\r\n                                                {likeflag && (\r\n                                                  <IconHeart onClick={() => setLikeFlag(false)} color='white' fill=\"Orange\" style={{marginTop:10,marginLeft:2,strokeWidth:0.5}} size={30}/>\r\n                                                )}\r\n                                                {!likeflag && (\r\n                                                  <IconHeart onClick={() => setLikeFlag(true)} color='white' fill=\"none\" style={{marginTop:10,marginLeft:2,strokeWidth:1}} size={30}/>\r\n                                                )}\r\n                                            </div>\r\n                                          </Grid>\r\n                                       </Grid>\r\n                                       <Grid container spacing={gridSpacing}>\r\n                                          <Grid item xs={11}>\r\n                                             <Typography style={{marginTop:3}} variant=\"subtitle1\" color=\"primary\">Read More...</Typography>\r\n                                             <Typography style={{marginTop:10}} variant=\"h4\" color=\"inherit\">by : Algo Edge Capital</Typography>\r\n                                          </Grid>\r\n                                       </Grid>\r\n                                       <Grid container spacing={gridSpacing}>\r\n                                          <Grid item xs={8}>\r\n                                                {selected.map((value) => (\r\n                                                        <Chip\r\n                                                            key={value}\r\n                                                            label={value}\r\n                                                            clickable\r\n                                                            color=\"primary\"\r\n                                                            style={{marginLeft:8,marginTop:10}}\r\n                                                            className={classes.chip}\r\n                                                        />\r\n                                                ))}\r\n                                          </Grid>\r\n                                          <Grid item xs={1}></Grid>\r\n                                          <Grid item xs={3}>\r\n                                              <Button color=\"secondary\" variant=\"outlined\" style={{width:120,marginLeft:25,fontWeight:700,marginTop:10}}>Subscribe</Button>\r\n                                          </Grid>\r\n                                       </Grid>\r\n                                       <Grid container spacing={gridSpacing} style={{marginTop:-10}}>\r\n                                          <Grid item xs={3}>\r\n                                          <Tooltip title=\"In last month\" placement=\"top\"><Typography style={{marginTop:10}} variant=\"subtitle2\" color=\"inherit\">Trades/~Costs <IconInfoCircle size={15}/> </Typography></Tooltip>                                   \r\n                                          <Typography style={{marginTop:2}} variant=\"h5\" color=\"inherit\">112 (₹ 2.2 K)</Typography>\r\n                                          </Grid>\r\n                                          <Grid item xs={3}>\r\n                                          <Tooltip title=\"Absolute Max. Drawdown (% of Min. Capital)\" placement=\"top\"><Typography style={{marginTop:10}} variant=\"subtitle2\" color=\"inherit\">Drawdown <IconInfoCircle size={15}/></Typography></Tooltip>\r\n                                          <Typography style={{marginTop:2}} variant=\"h5\" color=\"inherit\">₹ 13.6 K (8%)</Typography>\r\n                                          </Grid>\r\n                                          <Grid item xs={3}>\r\n                                          <Typography style={{marginTop:10}} variant=\"subtitle2\" color=\"inherit\">Min Capital</Typography>\r\n                                          <Typography style={{marginTop:2}} variant=\"h5\" color=\"inherit\">₹ 180 K</Typography>\r\n                                          </Grid>\r\n                                          <Grid item xs={3}>\r\n                                          <Tooltip title=\"Profit sharing monthly\" placement=\"top\"><Typography style={{marginTop:10}} variant=\"subtitle2\" color=\"inherit\">Monthly Fee <IconInfoCircle size={15}/></Typography></Tooltip>\r\n                                          <Typography style={{marginTop:2}} variant=\"h5\" color=\"inherit\">Free + 5%</Typography>\r\n                                          </Grid>\r\n                                       </Grid>\r\n                                                                                                   \r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </MainCard>\r\n                    </Grid>\r\n                    <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                        <MainCard className={classes.card} contentClass={classes.content}>\r\n                           <Typography variant=\"h4\" color=\"inherit\">Search Strategies</Typography>\r\n                           <OutlinedInput\r\n                                                            className={classes.searchControl}\r\n                                                            id=\"input-search-header\"\r\n                                                            value={value}\r\n                                                            onChange={(e) => setValue(e.target.value)}\r\n                                                            placeholder=\"Search\"\r\n                                                            size=\"small\"\r\n                                                            style={{width:280,marginTop:10,marginLeft:15}}\r\n                                                            startAdornment={\r\n                                                                <InputAdornment position=\"start\">\r\n                                                                    <IconSearch\r\n                                                                        stroke={1.5}\r\n                                                                        size=\"1rem\"\r\n                                                                        className={classes.startAdornment}\r\n                                                                    />\r\n                                                                </InputAdornment>\r\n                                                            }\r\n                                                            aria-describedby=\"search-helper-text\"\r\n                                                            inputProps={{\r\n                                                                'aria-label': 'weight'\r\n                                                            }}\r\n                                                        />\r\n                            <Typography style={{marginTop:20}} variant=\"h4\" color=\"inherit\">Sort by</Typography>\r\n                            <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper'}}>\r\n                                {[\"Latest\",\"Max Deployment\",\"Min Capital\"].map((value) => {\r\n                                    const labelId = `checkbox-list-label-${value}`;\r\n\r\n                                    return (\r\n                                    <ListItem\r\n                                        key={value}\r\n                                        disablePadding\r\n                                    >\r\n                                        <ListItemButton role={undefined} onClick={handleToggle(value)} dense>\r\n                                        <ListItemIcon>\r\n                                            <Checkbox\r\n                                            edge=\"start\"\r\n                                            checked={checked.indexOf(value) !== -1}\r\n                                            tabIndex={-1}\r\n                                            disableRipple\r\n                                            inputProps={{ 'aria-labelledby': labelId }}\r\n                                            />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText id={labelId} primary={`${value}`} />\r\n                                        </ListItemButton>\r\n                                    </ListItem>\r\n                                    );\r\n                                })}\r\n                            </List>\r\n                            <Typography style={{marginTop:20}} variant=\"h4\" color=\"inherit\">Fixed Fee</Typography>\r\n                            <FormControl style={{marginTop:10,marginLeft:15}}>\r\n                                <RadioGroup\r\n                                    aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                                    defaultValue=\"female\"\r\n                                    name=\"radio-buttons-group\"\r\n                                >\r\n                                    <FormControlLabel value=\"free\" control={<Radio />} label=\"Free\" />\r\n                                    <FormControlLabel value=\"paid\" control={<Radio />} label=\"Paid\" />\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                            <Typography style={{marginTop:20}} variant=\"h4\" color=\"inherit\">Favorite</Typography>\r\n                            <Checkbox style={{marginLeft:8}} {...label} />\r\n                            <div>\r\n                            <Button color=\"secondary\" variant=\"outlined\" style={{width:150,marginLeft:72,fontWeight:700,marginTop:10,}}>Reset</Button>\r\n                            </div>\r\n                        </MainCard>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default TradingAlgo;\r\n","D:\\new\\latest\\react_toth\\src\\views\\utilities\\EditBroker.js",["388","389","390","391","392","393","394","395","396","397","398","399","400","401"],"import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { IconEdit, IconFileDownload, IconSquarePlus } from '@tabler/icons';\r\nimport { Avatar, Button, CardActions, CardContent, Divider, Grid, Menu, MenuItem, Typography, TextField, Chip } from '@material-ui/core';\r\n\r\n// project imports\r\nimport MainCard from './../../ui-component/cards/MainCard';\r\nimport { gridSpacing } from './../../store/constant';\r\n\r\n// assets\r\nimport MoreHorizOutlinedIcon from '@material-ui/icons/MoreHorizOutlined';\r\n\r\nimport { createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport _without from \"lodash/without\";\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n        // redBackground: {\r\n        //   backgroundColor: \"#C00\",\r\n        //   padding: 10\r\n        // },\r\n        whiteBackground: {\r\n          backgroundColor: \"#FFF\"\r\n        },\r\n        formControl: {\r\n          margin: theme.spacing(1),\r\n          minWidth: 120,\r\n          maxWidth: 300\r\n        },\r\n        chips: {\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\"\r\n        },\r\n        chip: {\r\n          margin: 2,\r\n          backgroundColor: \"#FFF\"\r\n        },\r\n        noLabel: {\r\n          marginTop: theme.spacing(3)\r\n        }, \r\n    cardAction: {\r\n        padding: '10px',\r\n        paddingTop: 0,\r\n        justifyContent: 'center'\r\n    },\r\n    primaryLight: {\r\n        color: theme.palette.primary[200],\r\n        cursor: 'pointer'\r\n    },\r\n    divider: {\r\n        marginTop: '12px',\r\n        marginBottom: '12px'\r\n    },\r\n    avatarSuccess: {\r\n        width: '16px',\r\n        height: '16px',\r\n        borderRadius: '5px',\r\n        backgroundColor: theme.palette.success.light,\r\n        color: theme.palette.success.dark,\r\n        marginLeft: '15px'\r\n    },\r\n    successDark: {\r\n        color: theme.palette.success.dark\r\n    },\r\n    avatarError: {\r\n        width: '16px',\r\n        height: '16px',\r\n        borderRadius: '5px',\r\n        backgroundColor: theme.palette.orange.light,\r\n        color: theme.palette.orange.dark,\r\n        marginLeft: '15px'\r\n    },\r\n    errorDark: {\r\n        color: theme.palette.orange.dark\r\n    }\r\n}));\r\n\r\nconst Brokers = [\r\n    {\r\n        value: 'none',\r\n        label: 'Select Broker'\r\n    },\r\n    {\r\n        value: 'zerodha',\r\n        label: 'Zerodha'\r\n    },\r\n    {\r\n        value: 'upstox',\r\n        label: 'Upstox'\r\n    },\r\n];\r\n\r\nconst Exchanges = [\r\n   \"BITBNS (INR (₹))\",\r\n   \"CDS (INR (₹))\",\r\n   \"Cryto (USD ($))\",\r\n   \"FX (USD ($))\",\r\n   \"MCX (INR (₹))\",\r\n   \"NASDAQ-EQ (USD ($))\",\r\n   \"NFO (INR (₹))\",\r\n   \"NSE (INR (₹))\",\r\n   \"NSE_IDX (INR (₹))\"\r\n];\r\n\r\nconst initialSelected = [\r\n    \"CDS (INR (₹))\",\r\n    \"MCX (INR (₹))\",\r\n    \"NFO (INR (₹))\",\r\n    \"NSE (INR (₹))\",\r\n]\r\n  \r\n\r\n//-----------------------|| DASHBOARD DEFAULT - POPULAR CARD ||-----------------------//\r\n\r\nconst EditBroker = ({ isLoading }) => {\r\n    const classes = useStyles();\r\n    const [brokerValue, setBrokerValue] = React.useState('zerodha');\r\n    const [ExchangeName, setExchangesName] = React.useState(initialSelected);\r\n    const [fieldFlag, setFieldFlag] = React.useState(true);\r\n\r\n    const handleBroker = (event) => {\r\n        if(event.target.value == \"zerodha\" || event.target.value == \"upstox\"){\r\n            setFieldFlag(true)\r\n        }else{\r\n            setFieldFlag(false)\r\n        }\r\n        setBrokerValue(event.target.value)\r\n    }\r\n  \r\n    const handleChange = (event) => {\r\n        setExchangesName(event.target.value);\r\n    };\r\n  \r\n    const handleDelete = (e: React.MouseEvent,value) => {\r\n        setExchangesName((current) => _without(current, value));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n                <MainCard content={false}>\r\n                    <CardContent>\r\n                        <Grid container spacing={gridSpacing}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\r\n                                    <Grid item>\r\n                                        <Typography variant=\"h4\">Edit Broker</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Divider className={classes.divider} />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container direction=\"column\">\r\n                                    <Grid container spacing={gridSpacing}>\r\n                                        <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                                            <Typography variant=\"subtitle1\" color=\"inherit\">Select Broker</Typography>\r\n                                            <TextField\r\n                                                id=\"standard-select-currency\"\r\n                                                select\r\n                                                value={brokerValue}\r\n                                                size=\"small\"\r\n                                                onChange={(e) => handleBroker(e)}\r\n                                                style={{width:250,marginTop:8}}>\r\n                                                    {Brokers.map((option) => (\r\n                                                        <MenuItem key={option.value} value={option.value}>\r\n                                                            {option.label}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                            </TextField>\r\n                                        </Grid>\r\n                                        <Grid item lg={6} md={6} sm={6} xs={12}>\r\n                                            <Typography variant=\"subtitle1\" color=\"inherit\">Exchanges</Typography>\r\n                                            <div className={classes.redBackground}>\r\n                                                <FormControl className={classes.formControl}>\r\n                                                    <Select\r\n                                                        size=\"small\"\r\n                                                        style={{width:350}}\r\n                                                        labelId=\"demo-mutiple-chip-checkbox-label\"\r\n                                                        id=\"demo-mutiple-chip-checkbox\"\r\n                                                        multiple\r\n                                                        value={ExchangeName}\r\n                                                        onChange={handleChange}\r\n                                                        IconComponent={KeyboardArrowDownIcon}\r\n                                                        renderValue={(selected) => (\r\n                                                        <div className={classes.chips}>\r\n                                                            {selected.map((value) => (\r\n                                                                <Chip\r\n                                                                    key={value}\r\n                                                                    label={value}\r\n                                                                    clickable\r\n                                                                    variant=\"outlined\"\r\n                                                                    deleteIcon={\r\n                                                                    <CancelIcon\r\n                                                                        onMouseDown={(event) => event.stopPropagation()}\r\n                                                                    />\r\n                                                                    }\r\n                                                                    className={classes.chip}\r\n                                                                    onDelete={(e) => handleDelete(e, value)}\r\n                                                                />\r\n                                                            ))}\r\n                                                        </div>\r\n                                                        )}>\r\n                                                        {Exchanges.map((name) => (\r\n                                                            <MenuItem key={name} value={name}>\r\n                                                                {name}\r\n                                                            </MenuItem>\r\n                                                        ))}\r\n                                                     </Select>\r\n                                                </FormControl>\r\n                                            </div>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Divider className={classes.divider} />\r\n                            </Grid>\r\n                            {fieldFlag && ( \r\n                                <div style={{marginLeft:25}}>                    \r\n                                    <Grid item xs={12}>\r\n                                        <Grid container direction=\"column\">\r\n                                            <Grid container spacing={gridSpacing}>\r\n                                                <Grid item lg={6} md={6} sm={6} xs={12}>\r\n                                                    <Typography variant=\"subtitle1\" color=\"inherit\">Setup Link : </Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Divider className={classes.divider} />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid container direction=\"column\">\r\n                                            <Grid container spacing={gridSpacing}>\r\n                                                <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                                                    <Typography variant=\"subtitle1\" color=\"inherit\">api_key</Typography>\r\n                                                    <TextField\r\n                                                        id=\"api_key\"\r\n                                                        size=\"small\"\r\n                                                        value=\"SADGKJGSANXO12EW.KJK\"\r\n                                                        style={{width:250,marginTop:8}}>\r\n                                                    </TextField>\r\n                                                </Grid>\r\n                                                <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">api_secret</Typography>\r\n                                                <TextField\r\n                                                        id=\"api_secret\"\r\n                                                        size=\"small\"\r\n                                                        value=\"SAXDSAKH1244-NKLCNXLK\"\r\n                                                        style={{width:250,marginTop:8}}>\r\n                                                    </TextField>\r\n                                                </Grid>\r\n                                                <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">token</Typography>\r\n                                                <TextField\r\n                                                        id=\"token\"\r\n                                                        size=\"small\"\r\n                                                        value=\"CDSNCLK12212-CSLNCL-CLKDNXLKNSDC\"\r\n                                                        style={{width:250,marginTop:8}}>\r\n                                                    </TextField>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Divider className={classes.divider} />\r\n                                    </Grid>\r\n                                </div> \r\n                            )}  \r\n                            <Grid item xs={12}>\r\n                                <Grid container direction=\"column\">\r\n                                    <Grid container spacing={gridSpacing}>\r\n                                        <Grid xs={2}>\r\n                                            <Button href=\"/utils/brokers-and-exchanges\" color=\"error\" variant=\"contained\" style={{width:120,marginLeft:25,marginTop:10}}>Back</Button>\r\n                                        </Grid>\r\n                                        <Grid xs={2}>\r\n                                            <Button color=\"secondary\" variant=\"contained\" style={{width:120,marginLeft:0,marginTop:10}}>Save</Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </MainCard>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nEditBroker.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default EditBroker;\r\n","D:\\new\\latest\\react_toth\\src\\views\\utilities\\uploadFile.js",["402","403"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport configData from '../../config';\r\n\r\n// material-ui\r\nimport {\r\n    Button,\r\n    Typography,\r\n    Grid,\r\n    TextField,\r\n    Divider,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    MenuItem\r\n\r\n} from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\n// project imports\r\nimport MainCard from '../../ui-component/cards/MainCard';\r\n\r\n//==============================|| SAMPLE PAGE ||==============================//\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardAction: {\r\n        padding: '10px',\r\n        paddingTop: 0,\r\n        justifyContent: 'center'\r\n    },\r\n    primaryLight: {\r\n        color: theme.palette.primary[200],\r\n        cursor: 'pointer'\r\n    },\r\n    divider: {\r\n        marginTop: '12px',\r\n        marginBottom: '12px'\r\n    },\r\n    avatarSuccess: {\r\n        width: '16px',\r\n        height: '16px',\r\n        borderRadius: '5px',\r\n        backgroundColor: theme.palette.success.light,\r\n        color: theme.palette.success.dark,\r\n        marginLeft: '15px'\r\n    },\r\n    successDark: {\r\n        color: theme.palette.success.dark\r\n    },\r\n    avatarError: {\r\n        width: '16px',\r\n        height: '16px',\r\n        borderRadius: '5px',\r\n        backgroundColor: theme.palette.orange.light,\r\n        color: theme.palette.orange.dark,\r\n        marginLeft: '15px'\r\n    },\r\n    errorDark: {\r\n        color: theme.palette.orange.dark\r\n    }\r\n}));\r\n\r\n  function createData(Stock_Symbol, LTP, LPT_Date, Sell_Initiate,Sell_Target,Buy_Initiate,Buy_Target) {\r\n    return { Stock_Symbol, LTP, LPT_Date, Sell_Initiate,Sell_Target,Buy_Initiate,Buy_Target };\r\n  }\r\n\r\n  const columns = [\r\n    { id: 'Stock_Symbol', label: 'Stock_Symbol', minWidth: 120,  },\r\n    { id: 'LTP', label: 'LTP', minWidth: 120,  },\r\n    { id: 'LPT_Date', label: 'LPT_Date', minWidth: 120, },\r\n    { id: 'Sell_Initiate', label: 'Sell_Initiate', minWidth: 120, },\r\n    { id: 'Sell_Target', label: 'Sell_Target', minWidth: 120, },\r\n    { id: 'Buy_Initiate', label: 'Buy_Initiate', minWidth: 120, },\r\n    { id: 'Buy_Target', label: 'Buy_Target', minWidth: 120, },\r\n  ];\r\n  \r\n  const rows = [\r\n    createData('AAP', '20221223', '20221223', '22.23', '22.23', '22.23', '22.23'),\r\n    createData('BAP', '20221223', '20221223', '22.23', '22.23', '22.23', '22.23'),\r\n    createData('CAP', '20221223', '20221223', '22.23', '22.23', '22.23', '22.23'),\r\n  ];\r\n\r\nconst market = [\r\n    {\r\n        value: 'null',\r\n        label: 'Select Market'\r\n    },\r\n    {\r\n        value: 'india',\r\n        label: 'India'\r\n    },\r\n    {\r\n        value: 'us',\r\n        label: 'US'\r\n    },\r\n];\r\n\r\nconst UploadFile = () => {\r\n    const classes = useStyles();\r\n    const [resFlag, setResFlag] = useState(false);\r\n    const [file, setFile] = useState(0);\r\n    const [marketValue, setMarketValue] = React.useState('null');\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  \r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n  \r\n    const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(+event.target.value);\r\n      setPage(0);\r\n    };\r\n\r\n    const handleFileUpload = (event) => {\r\n        if (event.target.files) {\r\n            setFile(event.target.files[0]);\r\n        }\r\n        console.log(file);\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        const formData = new FormData();\r\n        formData.append('excel', file);\r\n\r\n        try {\r\n            const response = await axios.post(configData.API_SERVER + 'users/uploadmonthlymodel', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            alert(response.data.msg);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <MainCard title=\"Upload File\">\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                    <TextField size=\"small\" type=\"file\" onChange={handleFileUpload} />\r\n                </Grid>\r\n                <Grid item xs={2.8}>\r\n                    <TextField\r\n                        id=\"standard-select-currency\"\r\n                        select\r\n                        value={marketValue}\r\n                        size=\"small\"\r\n                        onChange={(e) => setMarketValue(e.target.value)}\r\n                        style={{width:200}}>\r\n                            {market.map((option) => (\r\n                                <MenuItem key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </MenuItem>\r\n                            ))}\r\n                    </TextField>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Button onClick={handleSubmit} variant=\"contained\" component=\"label\">\r\n                        Upload\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n            <Divider style={{marginTop:25}} className={classes.divider} />\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Typography style={{marginTop:5,marginLeft:5}} variant=\"h5\">Strategy Response :</Typography>\r\n                    <Paper sx={{ width: '100%', overflow: 'hidden', border:1,marginTop:1 }}>\r\n                        <TableContainer sx={{ maxHeight: 440 }}>\r\n                            <Table stickyHeader aria-label=\"sticky table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                {columns.map((column) => (\r\n                                    <TableCell\r\n                                    key={column.id}\r\n                                    align={column.align}\r\n                                    style={{ minWidth: column.minWidth }}\r\n                                    >\r\n                                    {column.label}\r\n                                    </TableCell>\r\n                                ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row) => {\r\n                                    return (\r\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                        {columns.map((column) => {\r\n                                        const value = row[column.id];\r\n                                        return (\r\n                                            <TableCell key={column.id} align={column.align}>\r\n                                            {column.format && typeof value === 'number'\r\n                                                ? column.format(value)\r\n                                                : value}\r\n                                            </TableCell>\r\n                                        );\r\n                                        })}\r\n                                    </TableRow>\r\n                                    );\r\n                                })}\r\n                            </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[10, 25, 100]}\r\n                            component=\"div\"\r\n                            count={rows.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            onPageChange={handleChangePage}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default UploadFile;\r\n","D:\\new\\latest\\react_toth\\src\\views\\utilities\\TablerIcons.js",[],"D:\\new\\latest\\react_toth\\src\\views\\pages\\authentication\\authentication3\\Register3.js",[],"D:\\new\\latest\\react_toth\\src\\views\\pages\\authentication\\authentication3\\Login3.js",[],"D:\\new\\latest\\react_toth\\src\\views\\utilities\\MaterialIcons.js",[],"D:\\new\\latest\\react_toth\\src\\views\\utilities\\Shadow.js",[],"D:\\new\\latest\\react_toth\\src\\views\\utilities\\Color.js",[],"D:\\new\\latest\\react_toth\\src\\views\\utilities\\Typography.js",["404"],"import React from 'react';\r\n// material-ui\r\nimport { Grid, Link } from '@material-ui/core';\r\nimport MuiTypography from '@material-ui/core/Typography';\r\n\r\n// project imports\r\nimport SubCard from './../../ui-component/cards/SubCard';\r\nimport MainCard from './../../ui-component/cards/MainCard';\r\nimport SecondaryAction from './../../ui-component/cards/CardSecondaryAction';\r\nimport { gridSpacing } from './../../store/constant';\r\n\r\n//==============================|| TYPOGRAPHY ||==============================//\r\n\r\nconst Typography = () => {\r\n    return (\r\n        <MainCard title=\"Basic Typography\" secondary={<SecondaryAction link=\"https://next.material-ui.com/system/typography/\" />}>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <SubCard title=\"Heading\">\r\n                        <Grid container direction=\"column\" spacing={1}>\r\n                            <Grid item>\r\n                                <MuiTypography variant=\"h1\" gutterBottom>\r\n                                    h1. Heading\r\n                                </MuiTypography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <MuiTypography variant=\"h2\" gutterBottom>\r\n                                    h2. Heading\r\n                                </MuiTypography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <MuiTypography variant=\"h3\" gutterBottom>\r\n                                    h3. Heading\r\n                                </MuiTypography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <MuiTypography variant=\"h4\" gutterBottom>\r\n                                    h4. Heading\r\n                                </MuiTypography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <MuiTypography variant=\"h5\" gutterBottom>\r\n                                    h5. Heading\r\n                                </MuiTypography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <MuiTypography variant=\"h6\" gutterBottom>\r\n                                    h6. Heading\r\n                                </MuiTypography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <SubCard title=\"Sub title\">\r\n                        <Grid container direction=\"column\" spacing={1}>\r\n                            <Grid item>\r\n                                <MuiTypography variant=\"subtitle1\" gutterBottom>\r\n                                    subtitle1. Lorem ipsum dolor sit connecter adieu siccing eliot. Quos blanditiis tenetur\r\n                                </MuiTypography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <MuiTypography variant=\"subtitle2\" gutterBottom>\r\n                                    subtitle2. Lorem ipsum dolor sit connecter adieu siccing eliot. Quos blanditiis tenetur\r\n                                </MuiTypography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <SubCard title=\"Body\">\r\n                        <Grid container direction=\"column\" spacing={1}>\r\n                            <Grid item>\r\n                                <MuiTypography variant=\"body1\" gutterBottom>\r\n                                    body1. Lorem ipsum dolor sit connecter adieu siccing eliot. Quos blanditiis tenetur unde suscipit, quam\r\n                                    beatae rerum inventore consectetur, neque doloribus, cupiditate numquam dignissimos laborum fugiat\r\n                                    deleniti? Eum quasi quidem quibusdam.\r\n                                </MuiTypography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <MuiTypography variant=\"body2\" gutterBottom>\r\n                                    body2. Lorem ipsum dolor sit connecter adieu siccing eliot. Quos blanditiis tenetur unde suscipit, quam\r\n                                    beatae rerum inventore consectetur, neque doloribus, cupiditate numquam dignissimos laborum fugiat\r\n                                    deleniti? Eum quasi quidem quibusdam.\r\n                                </MuiTypography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <SubCard title=\"Extra\">\r\n                        <Grid container direction=\"column\" spacing={1}>\r\n                            <Grid item>\r\n                                <MuiTypography variant=\"button\" display=\"block\" gutterBottom>\r\n                                    button text\r\n                                </MuiTypography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <MuiTypography variant=\"caption\" display=\"block\" gutterBottom>\r\n                                    caption text\r\n                                </MuiTypography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <MuiTypography variant=\"overline\" display=\"block\" gutterBottom>\r\n                                    overline text\r\n                                </MuiTypography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default Typography;\r\n","D:\\new\\latest\\react_toth\\src\\utils\\route-guard\\AuthGuard.js",[],"D:\\new\\latest\\react_toth\\src\\utils\\route-guard\\GuestGuard.js",[],"D:\\new\\latest\\react_toth\\src\\layout\\NavMotion.js",[],"D:\\new\\latest\\react_toth\\src\\layout\\MinimalLayout\\index.js",[],"D:\\new\\latest\\react_toth\\src\\views\\pages\\authentication\\register\\index.js",[],"D:\\new\\latest\\react_toth\\src\\store\\constant.js",[],"D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\index.js",[],"D:\\new\\latest\\react_toth\\src\\views\\pages\\authentication\\login\\index.js",[],"D:\\new\\latest\\react_toth\\src\\views\\dashboard\\Default\\index.js",[],"D:\\new\\latest\\react_toth\\src\\ui-component\\cards\\CardSecondaryAction.js",[],"D:\\new\\latest\\react_toth\\src\\ui-component\\cards\\MainCard.js",[],"D:\\new\\latest\\react_toth\\src\\ui-component\\cards\\SubCard.js",[],"D:\\new\\latest\\react_toth\\src\\ui-component\\cards\\AuthFooter.js",["405","406"],"import React from 'react';\r\n\r\n// material-ui\r\nimport { Link, Typography, Stack } from '@material-ui/core';\r\n\r\n//-----------------------|| FOOTER - AUTHENTICATION 2 & 3 ||-----------------------//\r\n\r\nconst AuthFooter = () => {\r\n    return (\r\n        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default AuthFooter;\r\n","D:\\new\\latest\\react_toth\\src\\ui-component\\Logo.js",["407"],"import React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@material-ui/styles';\r\nimport logo from './../assets/images/Logo-TOTH.png';\r\n/**\r\n * if you want to use image instead of <svg> uncomment following.\r\n *\r\n * import logoDark from './../../assets/images/logo-dark.svg';\r\n * import logo from './../../assets/images/logo.svg';\r\n *\r\n */\r\n\r\n//-----------------------|| LOGO SVG ||-----------------------//\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <img src={logo} alt=\"toth\" width=\"100\" />\r\n    );\r\n};\r\n\r\nexport default Logo;\r\n","D:\\new\\latest\\react_toth\\src\\views\\pages\\authentication\\register\\RestRegister.js",[],"D:\\new\\latest\\react_toth\\src\\views\\pages\\authentication\\AuthCardWrapper.js",[],"D:\\new\\latest\\react_toth\\src\\views\\pages\\authentication\\AuthWrapper1.js",[],"D:\\new\\latest\\react_toth\\src\\views\\dashboard\\Default\\TopFilter.js",["408","409","410","411","412","413","414","415","416"],"import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText } from '@material-ui/core';\r\n\r\n// project imports\r\nimport MainCard from '../../../ui-component/cards/MainCard';\r\nimport TotalIncomeCard from '../../../ui-component/cards/Skeleton/TotalIncomeCard';\r\nimport { Grid, MenuItem, TextField, Typography, useTheme } from '@material-ui/core';\r\n// assets\r\nimport StorefrontTwoToneIcon from '@material-ui/icons/StorefrontTwoTone';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        '&:after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            background: 'linear-gradient(210.04deg, ' + theme.palette.warning.dark + ' -50.94%, rgba(144, 202, 249, 0) 83.49%)',\r\n            borderRadius: '50%',\r\n            top: '-30px',\r\n            right: '-180px'\r\n        },\r\n        '&:before': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            background: 'linear-gradient(140.9deg, ' + theme.palette.warning.dark + ' -14.02%, rgba(144, 202, 249, 0) 70.50%)',\r\n            borderRadius: '50%',\r\n            top: '-160px',\r\n            right: '-130px'\r\n        }\r\n    },\r\n    content: {\r\n        padding: '16px !important'\r\n    },\r\n    avatar: {\r\n        ...theme.typography.commonAvatar,\r\n        ...theme.typography.largeAvatar,\r\n        backgroundColor: theme.palette.warning.light,\r\n        color: theme.palette.warning.dark\r\n    },\r\n    secondary: {\r\n        color: theme.palette.grey[500],\r\n        marginTop: '5px'\r\n    },\r\n    padding: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0\r\n    }\r\n}));\r\n\r\nconst status = [\r\n    {\r\n        value: 'today',\r\n        label: 'Today'\r\n    },\r\n    {\r\n        value: 'expiry',\r\n        label: 'Expiry'\r\n    },\r\n];\r\n\r\n//-----------------------|| DASHBOARD - TOTAL INCOME LIGHT CARD ||-----------------------//\r\n\r\nconst TopFilter = ({ isLoading }) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('today');\r\n    return (\r\n        <React.Fragment>\r\n            {isLoading ? (\r\n                <TotalIncomeCard />\r\n            ) : (\r\n                <MainCard className={classes.card} contentClass={classes.content}>\r\n                    <TextField\r\n                        id=\"standard-select-currency\"\r\n                        select\r\n                        value={value}\r\n                        onChange={(e) => setValue(e.target.value)}\r\n                        style={{width:200}}>\r\n                            {status.map((option) => (\r\n                                <MenuItem key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                </MainCard>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nTopFilter.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default TopFilter;\r\n","D:\\new\\latest\\react_toth\\src\\views\\dashboard\\Default\\PosValue.js",["417","418","419"],"import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\r\n\r\n// project imports\r\nimport MainCard from '../../../ui-component/cards/MainCard';\r\nimport TotalIncomeCard from '../../../ui-component/cards/Skeleton/TotalIncomeCard';\r\n\r\n// assets\r\nimport StorefrontTwoToneIcon from '@material-ui/icons/StorefrontTwoTone';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({ \r\n    card: {\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        '&:after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            background: 'linear-gradient(210.04deg, ' + theme.palette.warning.dark + ' -50.94%, rgba(144, 202, 249, 0) 83.49%)',\r\n            borderRadius: '50%',\r\n            top: '-30px',\r\n            right: '-180px'\r\n        },\r\n        '&:before': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            background: 'linear-gradient(140.9deg, ' + theme.palette.warning.dark + ' -14.02%, rgba(144, 202, 249, 0) 70.50%)',\r\n            borderRadius: '50%',\r\n            top: '-160px',\r\n            right: '-130px'\r\n        }\r\n    },\r\n    content: {\r\n        padding: '16px !important'\r\n    },\r\n    avatar: {\r\n        ...theme.typography.commonAvatar,\r\n        ...theme.typography.largeAvatar,\r\n        backgroundColor: theme.palette.warning.light,\r\n        color: theme.palette.warning.dark\r\n    },\r\n    secondary: {\r\n        color: theme.palette.grey[500],\r\n        marginTop: '5px'\r\n    },\r\n    padding: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0\r\n    }\r\n}));\r\n\r\n//-----------------------|| DASHBOARD - TOTAL INCOME LIGHT CARD ||-----------------------//\r\n\r\nconst PosValue = ({ isLoading }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isLoading ? (\r\n                <TotalIncomeCard />\r\n            ) : (\r\n                <MainCard className={classes.card} contentClass={classes.content}>\r\n                    <List className={classes.padding}>\r\n                        <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\r\n                            <ListItemText\r\n                                sx={{\r\n                                    mt: 0,\r\n                                    mb: 0\r\n                                }}\r\n                                className={classes.padding}\r\n                                primary={<Typography variant=\"subtitle1\" className={classes.secondary}>Value(Pos)</Typography>}\r\n                                secondary={\r\n                                    <Typography variant=\"h4\">₹0</Typography>\r\n                                }\r\n                            />\r\n                        </ListItem>\r\n                    </List>\r\n                </MainCard>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nPosValue.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default PosValue;\r\n","D:\\new\\latest\\react_toth\\src\\ui-component\\extended\\Avatar.js",[],"D:\\new\\latest\\react_toth\\src\\views\\dashboard\\Default\\CapitalValue.js",["420","421","422"],"import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\r\n\r\n// project imports\r\nimport MainCard from '../../../ui-component/cards/MainCard';\r\nimport TotalIncomeCard from '../../../ui-component/cards/Skeleton/TotalIncomeCard';\r\n\r\n// assets\r\nimport StorefrontTwoToneIcon from '@material-ui/icons/StorefrontTwoTone';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        '&:after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            background: 'linear-gradient(210.04deg, ' + theme.palette.warning.dark + ' -50.94%, rgba(144, 202, 249, 0) 83.49%)',\r\n            borderRadius: '50%',\r\n            top: '-30px',\r\n            right: '-180px'\r\n        },\r\n        '&:before': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            background: 'linear-gradient(140.9deg, ' + theme.palette.warning.dark + ' -14.02%, rgba(144, 202, 249, 0) 70.50%)',\r\n            borderRadius: '50%',\r\n            top: '-160px',\r\n            right: '-130px'\r\n        }\r\n    },\r\n    content: {\r\n        padding: '16px !important'\r\n    },\r\n    avatar: {\r\n        ...theme.typography.commonAvatar,\r\n        ...theme.typography.largeAvatar,\r\n        backgroundColor: theme.palette.warning.light,\r\n        color: theme.palette.warning.dark\r\n    },\r\n    secondary: {\r\n        color: theme.palette.grey[500],\r\n        marginTop: '5px'\r\n    },\r\n    padding: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0\r\n    }\r\n}));\r\n\r\n//-----------------------|| DASHBOARD - TOTAL INCOME LIGHT CARD ||-----------------------//\r\n\r\nconst CapitalValue = ({ isLoading }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isLoading ? (\r\n                <TotalIncomeCard />\r\n            ) : (\r\n                <MainCard className={classes.card} contentClass={classes.content}>\r\n                    <List className={classes.padding}>\r\n                        <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\r\n                            <ListItemText\r\n                                sx={{\r\n                                    mt: 0,\r\n                                    mb: 0\r\n                                }}\r\n                                className={classes.padding}\r\n                                primary={<Typography variant=\"subtitle1\" className={classes.secondary}>Capital</Typography>}\r\n                                secondary={\r\n                                    <Typography variant=\"h4\">₹0</Typography>\r\n                                }\r\n                            />\r\n                        </ListItem>\r\n                    </List>\r\n                </MainCard>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nCapitalValue.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default CapitalValue;\r\n","D:\\new\\latest\\react_toth\\src\\views\\dashboard\\Default\\DashboardPanels.js",["423","424","425","426","427","428","429","430","431"],"import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Box, Tabs, Tab, Avatar, TextField, Button, CardActions, CardContent, Divider, Grid, Menu, MenuItem, Typography } from '@material-ui/core';\r\nimport { TabContext, TabList, TabPanel,  } from '@material-ui/lab';\r\nimport { gridSpacing } from '../../../store/constant';\r\n\r\n// project imports\r\nimport MainCard from '../../../ui-component/cards/MainCard';\r\nimport SkeletonPopularCard from '../../../ui-component/cards/Skeleton/PopularCard';\r\nimport { IconChartBar, IconBellRinging, IconNotes, IconFloatNone, IconRuler } from '@tabler/icons';\r\n\r\n// assets\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardAction: {\r\n        padding: '10px',\r\n        paddingTop: 0,\r\n        justifyContent: 'center'\r\n    },\r\n    primaryLight: {\r\n        color: theme.palette.primary[200],\r\n        cursor: 'pointer'\r\n    },\r\n    divider: {\r\n        marginTop: '12px',\r\n        marginBottom: '12px'\r\n    },\r\n    avatarSuccess: {\r\n        width: '16px',\r\n        height: '16px',\r\n        borderRadius: '5px',\r\n        backgroundColor: theme.palette.success.light,\r\n        color: theme.palette.success.dark,\r\n        marginLeft: '15px'\r\n    },\r\n    successDark: {\r\n        color: theme.palette.success.dark\r\n    },\r\n    avatarError: {\r\n        width: '16px',\r\n        height: '16px',\r\n        borderRadius: '5px',\r\n        backgroundColor: theme.palette.orange.light,\r\n        color: theme.palette.orange.dark,\r\n        marginLeft: '15px'\r\n    },\r\n    errorDark: {\r\n        color: theme.palette.orange.dark\r\n    }\r\n}));\r\n\r\n\r\nfunction LinkTab(props) {\r\n    return (\r\n      <Tab\r\n        component=\"a\"\r\n        onClick={(event) => {\r\n          event.preventDefault();\r\n        }}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n\r\n\r\n//-----------------------|| DASHBOARD DEFAULT - POPULAR CARD ||-----------------------//\r\n\r\nconst DashboardPanels = ({ isLoading }) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(\"1\");\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n      };\r\n\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isLoading ? (\r\n                <SkeletonPopularCard />\r\n            ) : (\r\n\r\n                <MainCard content={false}>\r\n                    <TabContext value={value}>\r\n                        <Box sx={{ width: '100%',marginTop:1 }}>\r\n                            <Tabs value={value} onChange={handleChange} variant=\"scrollable\" textColor=\"secondary\" indicatorColor=\"secondary\" scrollButtons=\"auto\" aria-label=\"icon position tabs example\">\r\n                                <Tab icon={<IconChartBar />} style={{marginRight:20}} label=\"Market Watch\" value=\"1\" />\r\n                                <Tab icon={<IconFloatNone />} style={{marginRight:20}} label=\"Open Positions\" value=\"2\" />\r\n                                <Tab icon={<IconRuler />} style={{marginRight:20}} label=\"Greeks\" value=\"3\" />\r\n                                <Tab icon={<IconNotes />} style={{marginRight:20}} label=\"Order Book\" value=\"4\" />\r\n                                <Tab icon={<IconBellRinging />} style={{marginRight:20}} label=\"Notifications\" value=\"5\" />\r\n                            </Tabs>\r\n                        </Box>\r\n                        <TabPanel value=\"1\">\r\n                            <MainCard>\r\n                                <Grid container spacing={gridSpacing}>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid container alignContent=\"center\" justifyContent=\"space-between\">\r\n                                            <Grid item>\r\n                                                <Typography variant=\"h4\">Market Watch</Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Divider className={classes.divider} />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sx={{ pt: '16px !important' }}>\r\n                                        <Grid container spacing={gridSpacing}>\r\n                                            <Grid item lg={6} md={6} sm={6} xs={12}>\r\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">Watch List Name</Typography>\r\n                                                <TextField style={{width:455}} id=\"outlined-basic\" size='small' variant=\"outlined\" />\r\n                                            </Grid>\r\n                                            <Grid item lg={1.4} md={6} sm={6} xs={12}>\r\n                                                <Button color='secondary' variant=\"contained\" style={{width:90,padding:7,marginTop:24}}>Save</Button>\r\n                                            </Grid>\r\n                                            <Grid item lg={1.4} md={6} sm={6} xs={12}>\r\n                                                <Button variant=\"outlined\" style={{width:90,padding:7,marginTop:24}}>Cancel</Button>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </MainCard>\r\n                        </TabPanel>\r\n                        <TabPanel value=\"2\">\r\n                            <MainCard>\r\n                                    <Grid container spacing={gridSpacing}>\r\n                                        <Grid item xs={12}>\r\n                                            <Grid container alignContent=\"center\" justifyContent=\"space-between\">\r\n                                                <Grid item>\r\n                                                    <Typography variant=\"h4\">Open Position</Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Divider className={classes.divider} />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sx={{ pt: '16px !important' }}>\r\n                                            <Grid container spacing={gridSpacing}>\r\n                                                <Typography style={{marginTop:35,marginLeft:400}} variant=\"h6\">There are no records to display</Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                            </MainCard>\r\n                        </TabPanel>\r\n                        <TabPanel value=\"3\">\r\n                            <MainCard>\r\n                                    <Grid container spacing={gridSpacing}>\r\n                                        <Grid item xs={12}>\r\n                                            <Grid container alignContent=\"center\" justifyContent=\"space-between\">\r\n                                                <Grid item>\r\n                                                    <Typography variant=\"h4\">Greeks</Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Divider className={classes.divider} />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sx={{ pt: '16px !important' }}>\r\n                                            <Grid container spacing={gridSpacing}>\r\n                                                <Typography style={{marginTop:35,marginLeft:400}} variant=\"h6\">There are no records to display</Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                            </MainCard>\r\n                        </TabPanel>\r\n                        <TabPanel value=\"4\">\r\n                            <MainCard>\r\n                                    <Grid container spacing={gridSpacing}>\r\n                                        <Grid item xs={12}>\r\n                                            <Grid container alignContent=\"center\" justifyContent=\"space-between\">\r\n                                                <Grid item>\r\n                                                    <Typography variant=\"h4\">Order Book</Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Divider className={classes.divider} />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sx={{ pt: '16px !important' }}>\r\n                                            <Grid container spacing={gridSpacing}>\r\n                                                <Typography style={{marginTop:35,marginLeft:400}} variant=\"h6\">There are no records to display</Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                            </MainCard>\r\n                        </TabPanel>\r\n                        <TabPanel value=\"5\">\r\n                            <MainCard>\r\n                                    <Grid container spacing={gridSpacing}>\r\n                                        <Grid item xs={12}>\r\n                                            <Grid container alignContent=\"center\" justifyContent=\"space-between\">\r\n                                                <Grid item>\r\n                                                    <Typography variant=\"h4\">Recent Notifications</Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Divider className={classes.divider} />\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sx={{ pt: '16px !important' }}>\r\n                                            <Grid container spacing={gridSpacing}>\r\n                                                <Typography style={{marginTop:35,marginLeft:400}} variant=\"h6\">No recent notifications</Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                            </MainCard>\r\n                        </TabPanel>\r\n                    </TabContext>\r\n                </MainCard>\r\n     \r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nDashboardPanels.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default DashboardPanels;\r\n","D:\\new\\latest\\react_toth\\src\\views\\dashboard\\Default\\PLValue.js",["432","433","434"],"import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\r\n\r\n// project imports\r\nimport MainCard from '../../../ui-component/cards/MainCard';\r\nimport TotalIncomeCard from '../../../ui-component/cards/Skeleton/TotalIncomeCard';\r\n\r\n// assets\r\nimport StorefrontTwoToneIcon from '@material-ui/icons/StorefrontTwoTone';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        '&:after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            background: 'linear-gradient(210.04deg, ' + theme.palette.warning.dark + ' -50.94%, rgba(144, 202, 249, 0) 83.49%)',\r\n            borderRadius: '50%',\r\n            top: '-30px',\r\n            right: '-180px'\r\n        },\r\n        '&:before': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '210px',\r\n            height: '210px',\r\n            background: 'linear-gradient(140.9deg, ' + theme.palette.warning.dark + ' -14.02%, rgba(144, 202, 249, 0) 70.50%)',\r\n            borderRadius: '50%',\r\n            top: '-160px',\r\n            right: '-130px'\r\n        }\r\n    },\r\n    content: {\r\n        padding: '16px !important'\r\n    },\r\n    avatar: {\r\n        ...theme.typography.commonAvatar,\r\n        ...theme.typography.largeAvatar,\r\n        backgroundColor: theme.palette.warning.light,\r\n        color: theme.palette.warning.dark\r\n    },\r\n    secondary: {\r\n        color: theme.palette.grey[500],\r\n        marginTop: '5px'\r\n    },\r\n    padding: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0\r\n    }\r\n}));\r\n\r\n//-----------------------|| DASHBOARD - TOTAL INCOME LIGHT CARD ||-----------------------//\r\n\r\nconst PLValue = ({ isLoading }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isLoading ? (\r\n                <TotalIncomeCard />\r\n            ) : (\r\n                <MainCard className={classes.card} contentClass={classes.content}>\r\n                    <List className={classes.padding}>\r\n                        <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\r\n                            <ListItemText\r\n                                sx={{\r\n                                    mt: 0,\r\n                                    mb: 0\r\n                                }}\r\n                                className={classes.padding}\r\n                                primary={<Typography variant=\"subtitle1\" className={classes.secondary}>P&L</Typography>}\r\n                                secondary={\r\n                                    <Typography variant=\"h4\">₹0</Typography>\r\n                                }\r\n                            />\r\n                        </ListItem>\r\n                    </List>\r\n                </MainCard>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nPLValue.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default PLValue;\r\n","D:\\new\\latest\\react_toth\\src\\views\\pages\\authentication\\login\\RestLogin.js",[],"D:\\new\\latest\\react_toth\\src\\ui-component\\extended\\Breadcrumbs.js",[],"D:\\new\\latest\\react_toth\\src\\views\\dashboard\\Default\\DeployedStrategies.js",["435","436","437","438","439","440","441"],"import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Avatar, Button, CardActions, CardContent, Divider, Grid, Menu, MenuItem, Typography } from '@material-ui/core';\r\n// project imports\r\nimport MainCard from '../../../ui-component/cards/MainCard';\r\nimport SkeletonPopularCard from '../../../ui-component/cards/Skeleton/PopularCard';\r\nimport { gridSpacing } from '../../../store/constant';\r\n\r\n// assets\r\nimport { TextField, useTheme } from '@material-ui/core';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardAction: {\r\n        padding: '10px',\r\n        paddingTop: 0,\r\n        justifyContent: 'center'\r\n    },\r\n    primaryLight: {\r\n        color: theme.palette.primary[200],\r\n        cursor: 'pointer'\r\n    },\r\n    divider: {\r\n        marginTop: '12px',\r\n        marginBottom: '12px'\r\n    },\r\n    avatarSuccess: {\r\n        width: '16px',\r\n        height: '16px',\r\n        borderRadius: '5px',\r\n        backgroundColor: theme.palette.success.light,\r\n        color: theme.palette.success.dark,\r\n        marginLeft: '15px'\r\n    },\r\n    successDark: {\r\n        color: theme.palette.success.dark\r\n    },\r\n    avatarError: {\r\n        width: '16px',\r\n        height: '16px',\r\n        borderRadius: '5px',\r\n        backgroundColor: theme.palette.orange.light,\r\n        color: theme.palette.orange.dark,\r\n        marginLeft: '15px'\r\n    },\r\n    errorDark: {\r\n        color: theme.palette.orange.dark\r\n    }\r\n}));\r\n\r\nconst Status = [\r\n    {\r\n        value: 'all',\r\n        label: 'All'\r\n    },\r\n\t{\r\n        value: 'ative',\r\n        label: 'Active'\r\n    },\r\n\t{\r\n        value: 'liveentered',\r\n        label: 'Live-Entered'\r\n    },\r\n\t{\r\n        value: 'paused',\r\n        label: 'Paused'\r\n    },\r\n\t{\r\n        value: 'liverepaired',\r\n        label: 'Live-Repaired'\r\n    },\r\n\t{\r\n        value: 'exited',\r\n        label: 'Exited'\r\n    },\r\n\t{\r\n        value: 'exitpending',\r\n        label: 'Exit-Pending'\r\n    },\r\n\t{\r\n        value: 'livetranching',\r\n        label: 'Live-Tranching'\r\n    },\r\n\t{\r\n        value: 'errorexecution',\r\n        label: 'Error-Execution'\r\n    },\r\n\t{\r\n        value: 'awaitingoneClick',\r\n        label: 'Awaiting-OneClick'\r\n    },\r\n\t{\r\n        value: 'blocked',\r\n        label: 'Blocked'\r\n    },\r\n\t{\r\n        value: 'inactiveblocked',\r\n        label: 'Inactive-Blocked'\r\n    },\r\n]\r\n\r\nconst Execution = [\r\n    {\r\n        value: 'all',\r\n        label: 'All'\r\n    },\r\n    {\r\n        value: 'papertrading',\r\n        label: 'Paper Trading'\r\n    },\r\n    {\r\n        value: 'liveoffline',\r\n        label: 'Live Offline'\r\n    },\r\n    {\r\n        value: 'liveautoneclick',\r\n        label: 'Live Auto One Click'\r\n    },\r\n    {\r\n        value: 'liveauto',\r\n        label: 'Live Auto'\r\n    },\r\n];\r\n\r\n//-----------------------|| DASHBOARD DEFAULT - POPULAR CARD ||-----------------------//\r\n\r\nconst DeployedStrategies = ({ isLoading }) => {\r\n    const classes = useStyles();\r\n    const [executionValue, setexEcutionValue] = React.useState('all');\r\n    const [statusValue, setStatusValue] = React.useState('all');\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isLoading ? (\r\n                <SkeletonPopularCard />\r\n            ) : (\r\n                <MainCard content={false}>\r\n                    <CardContent>\r\n                        <Grid container spacing={gridSpacing}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\r\n                                    <Grid item>\r\n                                        <Typography variant=\"h4\">Deployed Strategies</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} sx={{ pt: '16px !important' }}>\r\n                            <Grid container spacing={gridSpacing}>\r\n                                <Grid item lg={2.5} md={6} sm={6} xs={12}>\r\n                                    <Typography variant=\"subtitle1\" color=\"inherit\">Execution</Typography>\r\n                                    <TextField\r\n                                        id=\"standard-select-currency\"\r\n                                        select\r\n                                        value={executionValue}\r\n                                        size=\"small\"\r\n                                        onChange={(e) => setexEcutionValue(e.target.value)}\r\n                                        style={{width:200,marginTop:8}}>\r\n                                            {Execution.map((option) => (\r\n                                                <MenuItem key={option.value} value={option.value}>\r\n                                                    {option.label}\r\n                                                </MenuItem>\r\n                                            ))}\r\n                                    </TextField>\r\n                                </Grid>\r\n                                <Grid item lg={2.5} md={6} sm={6} xs={12}>\r\n                                    <Typography variant=\"subtitle1\" color=\"inherit\">Status</Typography>\r\n                                    <TextField\r\n                                        id=\"standard-select-currency\"\r\n                                        select\r\n                                        size=\"small\"\r\n                                        value={statusValue}\r\n                                        onChange={(e) => setStatusValue(e.target.value)}\r\n                                        style={{width:200,marginTop:8}}>\r\n                                            {Status.map((option) => (\r\n                                                <MenuItem key={option.value} value={option.value}>\r\n                                                    {option.label}\r\n                                                </MenuItem>\r\n                                            ))}\r\n                                    </TextField>\r\n                                </Grid>\r\n                                <Grid item lg={1.2} md={6} sm={6} xs={12}>\r\n                                    <Button color=\"secondary\" variant=\"contained\" style={{width:90,padding:7,marginTop:32}}>Filter</Button>\r\n                                </Grid>\r\n                                <Grid item lg={1.2} md={6} sm={6} xs={12}>\r\n                                    <Button variant=\"outlined\" style={{width:90,padding:7,marginTop:32}}>Reset</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container direction=\"column\">\r\n                                    <Grid item>\r\n\r\n                                    </Grid>\r\n                                </Grid> \r\n                                <Divider className={classes.divider} />\r\n                                <Grid container direction=\"column\">\r\n                                    <Grid container spacing={gridSpacing}>\r\n                                        <Grid item lg={2.4} md={6} sm={6} xs={12}>\r\n                                            <Typography variant=\"subtitle2\" color=\"inherit\">Strategy (Counter)</Typography>\r\n                                        </Grid>\r\n                                        <Grid item lg={2.4} md={6} sm={6} xs={12}>\r\n                                            <Typography variant=\"subtitle2\" color=\"inherit\">Execution</Typography>\r\n                                        </Grid>\r\n                                        <Grid item lg={2.4} md={6} sm={6} xs={12}>\r\n                                            <Typography variant=\"subtitle2\" color=\"inherit\">Open | Total Positions</Typography>\r\n                                        </Grid>\r\n                                        <Grid item lg={2.4} md={6} sm={6} xs={12}>\r\n                                            <Typography variant=\"subtitle2\" color=\"inherit\">Multiplier | Status</Typography>\r\n                                        </Grid>\r\n                                        <Grid item lg={2.4} md={6} sm={6} xs={12}>\r\n                                            <Typography variant=\"subtitle2\" color=\"inherit\">Total P&L</Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                    {/* <CardActions className={classes.cardAction}>\r\n                        <Button size=\"small\" disableElevation>\r\n                            View All\r\n                            <ChevronRightOutlinedIcon />\r\n                        </Button>\r\n                    </CardActions> */}\r\n                </MainCard>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nDeployedStrategies.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default DeployedStrategies;\r\n","D:\\new\\latest\\react_toth\\src\\layout\\Customization\\index.js",[],"D:\\new\\latest\\react_toth\\src\\views\\pages\\authentication\\firebase-forms\\FirebaseRegister.js",[],"D:\\new\\latest\\react_toth\\src\\views\\pages\\authentication\\firebase-forms\\FirebaseLogin.js",[],"D:\\new\\latest\\react_toth\\src\\utils\\password-strength.js",[],"D:\\new\\latest\\react_toth\\src\\ui-component\\extended\\AnimateButton.js",[],"D:\\new\\latest\\react_toth\\src\\hooks\\useScriptRef.js",[],"D:\\new\\latest\\react_toth\\src\\menu-items\\index.js",[],"D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\Sidebar\\index.js",[],"D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\Header\\index.js",[],"D:\\new\\latest\\react_toth\\src\\ui-component\\cards\\Skeleton\\PopularCard.js",[],"D:\\new\\latest\\react_toth\\src\\ui-component\\cards\\Skeleton\\TotalIncomeCard.js",[],"D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\Header\\SearchSection\\index.js",[],"D:\\new\\latest\\react_toth\\src\\menu-items\\others.js",[],"D:\\new\\latest\\react_toth\\src\\menu-items\\dashboard.js",[],"D:\\new\\latest\\react_toth\\src\\ui-component\\Loader.js",[],"D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\Header\\ProfileSection\\index.js",["442","443","444","445","446","447","448","449","450","451","452","453","454","455","456"],"import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport configData from '../../../../config';\r\n\r\n// material-ui\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport {\r\n    Avatar,\r\n    Link,\r\n    Card,\r\n    CardContent,\r\n    Chip,\r\n    ClickAwayListener,\r\n    Divider,\r\n    Grid,\r\n    InputAdornment,\r\n    List,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    OutlinedInput,\r\n    Paper,\r\n    Popper,\r\n    Switch,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport ListItemButton from '@material-ui/core/ListItemButton';\r\n\r\n// third-party\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport axios from 'axios';\r\n\r\n// project imports\r\nimport MainCard from '../../../../ui-component/cards/MainCard';\r\nimport Transitions from '../../../../ui-component/extended/Transitions';\r\nimport UpgradePlanCard from './UpgradePlanCard';\r\nimport { LOGOUT } from './../../../../store/actions';\r\n\r\n// assets\r\nimport { IconLogout, IconSearch, IconSettings, IconArrowRight, IconUser, IconKey, IconLayoutGridAdd, IconId } from '@tabler/icons';\r\nimport User1 from './../../../../assets/images/users/user-round.svg';\r\n\r\n// style const\r\nconst useStyles = makeStyles((theme) => ({\r\n    navContainer: {\r\n        width: '100%',\r\n        maxWidth: '350px',\r\n        minWidth: '300px',\r\n        backgroundColor: theme.palette.background.paper,\r\n        borderRadius: '10px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            minWidth: '100%'\r\n        }\r\n    },\r\n    headerAvatar: {\r\n        cursor: 'pointer',\r\n        ...theme.typography.mediumAvatar,\r\n        margin: '8px 0 8px 8px !important'\r\n    },\r\n    profileChip: {\r\n        height: '48px',\r\n        alignItems: 'center',\r\n        borderRadius: '27px',\r\n        transition: 'all .2s ease-in-out',\r\n        borderColor: theme.palette.primary.light,\r\n        backgroundColor: theme.palette.primary.light,\r\n        '&[aria-controls=\"menu-list-grow\"], &:hover': {\r\n            borderColor: theme.palette.primary.main,\r\n            background: theme.palette.primary.main + '!important',\r\n            color: theme.palette.primary.light,\r\n            '& svg': {\r\n                stroke: theme.palette.primary.light\r\n            }\r\n        }\r\n    },\r\n    profileLabel: {\r\n        lineHeight: 0,\r\n        padding: '12px'\r\n    },\r\n    listItem: {\r\n        marginTop: '5px'\r\n    },\r\n    cardContent: {\r\n        padding: '16px !important'\r\n    },\r\n    card: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        marginBottom: '16px',\r\n        marginTop: '16px'\r\n    },\r\n    searchControl: {\r\n        width: '100%',\r\n        paddingRight: '8px',\r\n        paddingLeft: '16px',\r\n        marginBottom: '16px',\r\n        marginTop: '16px'\r\n    },\r\n    startAdornment: {\r\n        fontSize: '1rem',\r\n        color: theme.palette.grey[500]\r\n    },\r\n    flex: {\r\n        display: 'flex'\r\n    },\r\n    name: {\r\n        marginLeft: '2px',\r\n        fontWeight: 400\r\n    },\r\n    ScrollHeight: {\r\n        height: '100%',\r\n        maxHeight: 'calc(100vh - 250px)',\r\n        overflowX: 'hidden'\r\n    },\r\n    badgeWarning: {\r\n        backgroundColor: theme.palette.warning.dark,\r\n        color: '#fff'\r\n    }\r\n}));\r\n\r\n//-----------------------|| PROFILE MENU ||-----------------------//\r\n\r\nconst ProfileSection = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const customization = useSelector((state) => state.customization);\r\n    const account = useSelector((state) => state.account);\r\n    const dispatcher = useDispatch();\r\n\r\n    const [sdm, setSdm] = React.useState(true);\r\n    const [value, setValue] = React.useState('');\r\n    const [notification, setNotification] = React.useState(false);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef(null);\r\n    const handleLogout = () => {\r\n        console.log(account.token);\r\n        axios\r\n            .post( configData.API_SERVER + 'users/logout', {token: `${account.token}`}, { headers: { Authorization: `${account.token}` } })\r\n            .then(function (response) {\r\n                \r\n                // Force the LOGOUT\r\n                //if (response.data.success) {\r\n                    dispatcher({ type: LOGOUT });\r\n                //} else {\r\n                //    console.log('response - ', response.data.msg);\r\n                //}\r\n            })\r\n            .catch(function (error) {\r\n                console.log('error - ', error);\r\n            });\r\n    };\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    const prevOpen = React.useRef(open);\r\n    React.useEffect(() => {\r\n        if (prevOpen.current === true && open === false) {\r\n            anchorRef.current.focus();\r\n        }\r\n\r\n        prevOpen.current = open;\r\n    }, [open]);\r\n    return (\r\n        <React.Fragment>\r\n            <Chip\r\n                classes={{ label: classes.profileLabel }}\r\n                className={classes.profileChip}\r\n                icon={\r\n                    <Avatar\r\n                        src={User1}\r\n                        className={classes.headerAvatar}\r\n                        ref={anchorRef}\r\n                        aria-controls={open ? 'menu-list-grow' : undefined}\r\n                        aria-haspopup=\"true\"\r\n                        color=\"inherit\"\r\n                    />\r\n                }\r\n                label={<IconSettings stroke={1.5} size=\"1.5rem\" color={theme.palette.primary.main} />}\r\n                variant=\"outlined\"\r\n                ref={anchorRef}\r\n                aria-controls={open ? 'menu-list-grow' : undefined}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleToggle}\r\n                color=\"primary\"\r\n            />\r\n            <Popper\r\n                placement=\"bottom-end\"\r\n                open={open}\r\n                anchorEl={anchorRef.current}\r\n                role={undefined}\r\n                transition\r\n                disablePortal\r\n                popperOptions={{\r\n                    modifiers: [\r\n                        {\r\n                            name: 'offset',\r\n                            options: {\r\n                                offset: [0, 14]\r\n                            }\r\n                        }\r\n                    ]\r\n                }}\r\n            >\r\n                {({ TransitionProps }) => (\r\n                    <Transitions in={open} {...TransitionProps}>\r\n                        <Paper>\r\n                            <ClickAwayListener onClickAway={handleClose}>\r\n                                <MainCard border={false} elevation={16} content={false} boxShadow shadow={theme.shadows[16]}>\r\n                                    <CardContent className={classes.cardContent}>\r\n                                        <Grid container direction=\"column\" spacing={0}>\r\n                                            <Grid item className={classes.flex}>\r\n                                                <Typography variant=\"h4\">Good Morning,</Typography>\r\n                                                <Typography component=\"span\" variant=\"h4\" className={classes.name}>\r\n                                                    John\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Typography style={{marginLeft:2}} variant=\"subtitle2\">Admin</Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        {/* <OutlinedInput\r\n                                            className={classes.searchControl}\r\n                                            id=\"input-search-profile\"\r\n                                            value={value}\r\n                                            onChange={(e) => setValue(e.target.value)}\r\n                                            placeholder=\"Search profile options\"\r\n                                            startAdornment={\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <IconSearch stroke={1.5} size=\"1.3rem\" className={classes.startAdornment} />\r\n                                                </InputAdornment>\r\n                                            }\r\n                                            aria-describedby=\"search-helper-text\"\r\n                                            inputProps={{\r\n                                                'aria-label': 'weight'\r\n                                            }}\r\n                                        /> */}\r\n                                        <Divider />\r\n                                        {/* <PerfectScrollbar className={classes.ScrollHeight}> */}\r\n                                            {/* <UpgradePlanCard /> */}\r\n                                            <Divider />\r\n                                            <List component=\"nav\" className={classes.navContainer}>\r\n                                                <Link href=\"/utils/profile-page\" color=\"inherit\" style={{textDecoration: 'none'}}>\r\n                                                    <ListItemButton\r\n                                                        className={classes.listItem}\r\n                                                        sx={{ borderRadius: customization.borderRadius + 'px' }}\r\n                                                        selected={selectedIndex === 4}>\r\n                                                        <ListItemIcon>\r\n                                                            <IconUser stroke={2.0} size=\"1.3rem\" />\r\n                                                        </ListItemIcon>\r\n                                                        <ListItemText primary={<Typography variant=\"body2\">Profile</Typography>} />\r\n                                                    </ListItemButton>\r\n                                                </Link>\r\n                                                <Link href=\"/utils/brokers-and-exchanges\" color=\"inherit\" style={{textDecoration: 'none'}}>\r\n                                                    <ListItemButton\r\n                                                        className={classes.listItem}\r\n                                                        sx={{ borderRadius: customization.borderRadius + 'px' }}\r\n                                                        selected={selectedIndex === 4}>\r\n                                                        <ListItemIcon>\r\n                                                            <IconLayoutGridAdd stroke={2.0} size=\"1.3rem\" />\r\n                                                        </ListItemIcon>\r\n                                                        <ListItemText primary={<Typography variant=\"body2\">Broker & Exchanges</Typography>} />\r\n                                                    </ListItemButton>\r\n                                                </Link>\r\n                                                <Link href=\"\" color=\"inherit\" style={{textDecoration: 'none'}}>\r\n                                                    <ListItemButton\r\n                                                        className={classes.listItem}\r\n                                                        sx={{ borderRadius: customization.borderRadius + 'px' }}\r\n                                                        selected={selectedIndex === 4}>\r\n                                                        <ListItemIcon>\r\n                                                            <IconId stroke={2.0} size=\"1.3rem\" />\r\n                                                        </ListItemIcon>\r\n                                                        <ListItemText primary={<Typography variant=\"body2\">Subscriptions</Typography>} />\r\n                                                    </ListItemButton>\r\n                                                </Link>\r\n                                                <Link href=\"\" color=\"inherit\" style={{textDecoration: 'none'}}>\r\n                                                    <ListItemButton\r\n                                                        className={classes.listItem}\r\n                                                        sx={{ borderRadius: customization.borderRadius + 'px' }}\r\n                                                        selected={selectedIndex === 4}>\r\n                                                        <ListItemIcon>\r\n                                                            <IconKey stroke={2.0} size=\"1.3rem\" />\r\n                                                        </ListItemIcon>\r\n                                                        <ListItemText primary={<Typography variant=\"body2\">Change Password</Typography>} />\r\n                                                    </ListItemButton>\r\n                                                </Link>\r\n                                                <ListItemButton\r\n                                                    className={classes.listItem}\r\n                                                    sx={{ borderRadius: customization.borderRadius + 'px' }}\r\n                                                    selected={selectedIndex === 4}\r\n                                                    onClick={handleLogout}\r\n                                                >\r\n                                                    <ListItemIcon>\r\n                                                        <IconLogout stroke={2.0} size=\"1.3rem\" />\r\n                                                    </ListItemIcon>\r\n                                                    <ListItemText primary={<Typography variant=\"body2\">Logout</Typography>} />\r\n                                                </ListItemButton>\r\n                                            </List>\r\n                                        {/* </PerfectScrollbar> */}\r\n                                    </CardContent>\r\n                                </MainCard>\r\n                            </ClickAwayListener>\r\n                        </Paper>\r\n                    </Transitions>\r\n                )}\r\n            </Popper>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ProfileSection;\r\n","D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\Sidebar\\MenuCard\\index.js",["457","458","459","460","461","462","463"],"import React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Button, Card, CardContent, Grid, Link, Stack, Typography } from '@material-ui/core';\r\n\r\n// project imports\r\nimport AnimateButton from './../../../../ui-component/extended/AnimateButton';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        background: theme.palette.warning.light,\r\n        marginTop: '16px',\r\n        marginBottom: '16px',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        '&:after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '200px',\r\n            height: '200px',\r\n            border: '19px solid ',\r\n            borderColor: theme.palette.warning.main,\r\n            borderRadius: '50%',\r\n            top: '65px',\r\n            right: '-150px'\r\n        },\r\n        '&:before': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '200px',\r\n            height: '200px',\r\n            border: '3px solid ',\r\n            borderColor: theme.palette.warning.main,\r\n            borderRadius: '50%',\r\n            top: '145px',\r\n            right: '-70px'\r\n        }\r\n    },\r\n    tagLine: {\r\n        color: theme.palette.grey[900],\r\n        opacity: 0.6\r\n    },\r\n    button: {\r\n        color: theme.palette.grey[800],\r\n        backgroundColor: theme.palette.warning.main,\r\n        textTransform: 'capitalize',\r\n        boxShadow: 'none',\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.warning.dark\r\n        }\r\n    }\r\n}));\r\n\r\n//-----------------------|| PROFILE MENU - UPGRADE PLAN CARD ||-----------------------//\r\n\r\nconst UpgradePlanCard = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            {/* <CardContent>\r\n                <Grid container direction=\"column\" spacing={2}>\r\n                    <Grid item>\r\n                        <Typography variant=\"h4\">\r\n                            React Nodejs Berry\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant=\"subtitle2\" className={classes.tagLine}>\r\n                            Open-source full-stack seed project.\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Stack direction=\"row\">\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    component={Link}\r\n                                    href=\"https://appseed.us/product/react-node-js-berry-dashboard\"\r\n                                    target=\"_blank\"\r\n                                    variant=\"contained\"\r\n                                    className={classes.button}\r\n                                >\r\n                                    See Product\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent> */}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default UpgradePlanCard;\r\n","D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\LogoSection\\index.js",[],"D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\Header\\NotificationSection\\index.js",[],"D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\Sidebar\\MenuList\\index.js",[],"D:\\new\\latest\\react_toth\\src\\ui-component\\extended\\Transitions.js",[],"D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\Header\\NotificationSection\\NotificationList.js",[],"D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\Header\\ProfileSection\\UpgradePlanCard.js",["464","465","466","467","468","469"],"import React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Button, Card, CardContent, Grid, Link, Stack, Typography } from '@material-ui/core';\r\n\r\n// project imports\r\nimport AnimateButton from './../../../../ui-component/extended/AnimateButton';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        background: theme.palette.warning.light,\r\n        marginTop: '16px',\r\n        marginBottom: '16px',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        '&:after': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '200px',\r\n            height: '200px',\r\n            border: '19px solid ',\r\n            borderColor: theme.palette.warning.main,\r\n            borderRadius: '50%',\r\n            top: '65px',\r\n            right: '-150px'\r\n        },\r\n        '&:before': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            width: '200px',\r\n            height: '200px',\r\n            border: '3px solid ',\r\n            borderColor: theme.palette.warning.main,\r\n            borderRadius: '50%',\r\n            top: '145px',\r\n            right: '-70px'\r\n        }\r\n    },\r\n    tagLine: {\r\n        color: theme.palette.grey[900],\r\n        opacity: 0.6\r\n    },\r\n    button: {\r\n        color: theme.palette.grey[800],\r\n        backgroundColor: theme.palette.warning.main,\r\n        textTransform: 'capitalize',\r\n        boxShadow: 'none',\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.warning.dark\r\n        }\r\n    }\r\n}));\r\n\r\n//-----------------------|| PROFILE MENU - UPGRADE PLAN CARD ||-----------------------//\r\n\r\nconst UpgradePlanCard = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardContent>\r\n                {/* <Grid container direction=\"column\" spacing={2}>\r\n                    <Grid item>\r\n                        <Typography variant=\"h4\">\r\n                            React Nodejs Berry\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography variant=\"subtitle2\" className={classes.tagLine}>\r\n                            Open-source full-stack seed project.\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Stack direction=\"row\">\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    component={Link}\r\n                                    href=\"https://appseed.us/product/react-node-js-berry-dashboard\"\r\n                                    target=\"_blank\"\r\n                                    variant=\"contained\"\r\n                                    className={classes.button}\r\n                                >\r\n                                    See Product\r\n                                </Button>                                \r\n                            </AnimateButton>\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid> */}\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default UpgradePlanCard;\r\n","D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\Sidebar\\MenuList\\NavGroup\\index.js",[],"D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\Sidebar\\MenuList\\NavCollapse\\index.js",[],"D:\\new\\latest\\react_toth\\src\\layout\\MainLayout\\Sidebar\\MenuList\\NavItem\\index.js",[],"D:\\new\\latest\\react_toth\\src\\views\\utilities\\ProfilePage.js",["470","471","472","473","474","475","476","477","478","479","480","481","482","483","484"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport configData from '../../config';\r\n\r\n// material-ui\r\nimport {\r\n    Button,\r\n    Typography,\r\n    Grid,\r\n    TextField,\r\n    Divider,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    MenuItem\r\n\r\n} from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\n// project imports\r\nimport MainCard from '../../ui-component/cards/MainCard';\r\n\r\n//==============================|| SAMPLE PAGE ||==============================//\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardAction: {\r\n        padding: '10px',\r\n        paddingTop: 0,\r\n        justifyContent: 'center'\r\n    },\r\n    primaryLight: {\r\n        color: theme.palette.primary[200],\r\n        cursor: 'pointer'\r\n    },\r\n    divider: {\r\n        marginTop: '12px',\r\n        marginBottom: '12px'\r\n    },\r\n    avatarSuccess: {\r\n        width: '16px',\r\n        height: '16px',\r\n        borderRadius: '5px',\r\n        backgroundColor: theme.palette.success.light,\r\n        color: theme.palette.success.dark,\r\n        marginLeft: '15px'\r\n    },\r\n    successDark: {\r\n        color: theme.palette.success.dark\r\n    },\r\n    avatarError: {\r\n        width: '16px',\r\n        height: '16px',\r\n        borderRadius: '5px',\r\n        backgroundColor: theme.palette.orange.light,\r\n        color: theme.palette.orange.dark,\r\n        marginLeft: '15px'\r\n    },\r\n    errorDark: {\r\n        color: theme.palette.orange.dark\r\n    }\r\n}));\r\n\r\nconst ProfilePage = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MainCard title=\"User Profile\">\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={2}>\r\n                </Grid>\r\n            </Grid>\r\n            <Divider style={{marginTop:25}} className={classes.divider} />\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default ProfilePage;\r\n",{"ruleId":"485","replacedBy":"486"},{"ruleId":"487","replacedBy":"488"},{"ruleId":"489","severity":1,"message":"490","line":6,"column":20,"nodeType":"491","messageId":"492","endLine":6,"endColumn":36},{"ruleId":"489","severity":1,"message":"493","line":6,"column":38,"nodeType":"491","messageId":"492","endLine":6,"endColumn":52},{"ruleId":"489","severity":1,"message":"494","line":7,"column":16,"nodeType":"491","messageId":"492","endLine":7,"endColumn":22},{"ruleId":"489","severity":1,"message":"495","line":7,"column":32,"nodeType":"491","messageId":"492","endLine":7,"endColumn":43},{"ruleId":"489","severity":1,"message":"496","line":6,"column":10,"nodeType":"491","messageId":"492","endLine":6,"endColumn":18},{"ruleId":"489","severity":1,"message":"490","line":6,"column":20,"nodeType":"491","messageId":"492","endLine":6,"endColumn":36},{"ruleId":"489","severity":1,"message":"493","line":6,"column":38,"nodeType":"491","messageId":"492","endLine":6,"endColumn":52},{"ruleId":"489","severity":1,"message":"494","line":7,"column":10,"nodeType":"491","messageId":"492","endLine":7,"endColumn":16},{"ruleId":"489","severity":1,"message":"495","line":7,"column":26,"nodeType":"491","messageId":"492","endLine":7,"endColumn":37},{"ruleId":"489","severity":1,"message":"497","line":7,"column":67,"nodeType":"491","messageId":"492","endLine":7,"endColumn":71},{"ruleId":"489","severity":1,"message":"498","line":14,"column":8,"nodeType":"491","messageId":"492","endLine":14,"endColumn":29},{"ruleId":"489","severity":1,"message":"499","line":16,"column":10,"nodeType":"491","messageId":"492","endLine":16,"endColumn":22},{"ruleId":"489","severity":1,"message":"500","line":16,"column":24,"nodeType":"491","messageId":"492","endLine":16,"endColumn":29},{"ruleId":"489","severity":1,"message":"501","line":17,"column":8,"nodeType":"491","messageId":"492","endLine":17,"endColumn":18},{"ruleId":"489","severity":1,"message":"502","line":19,"column":8,"nodeType":"491","messageId":"492","endLine":19,"endColumn":20},{"ruleId":"489","severity":1,"message":"503","line":21,"column":8,"nodeType":"491","messageId":"492","endLine":21,"endColumn":16},{"ruleId":"489","severity":1,"message":"504","line":116,"column":7,"nodeType":"491","messageId":"492","endLine":116,"endColumn":22},{"ruleId":"505","severity":1,"message":"506","line":133,"column":31,"nodeType":"507","messageId":"508","endLine":133,"endColumn":33},{"ruleId":"505","severity":1,"message":"506","line":133,"column":66,"nodeType":"507","messageId":"508","endLine":133,"endColumn":68},{"ruleId":"489","severity":1,"message":"509","line":2,"column":8,"nodeType":"491","messageId":"492","endLine":2,"endColumn":13},{"ruleId":"489","severity":1,"message":"510","line":4,"column":8,"nodeType":"491","messageId":"492","endLine":4,"endColumn":18},{"ruleId":"489","severity":1,"message":"511","line":5,"column":8,"nodeType":"491","messageId":"492","endLine":5,"endColumn":21},{"ruleId":"489","severity":1,"message":"512","line":11,"column":5,"nodeType":"491","messageId":"492","endLine":11,"endColumn":14},{"ruleId":"489","severity":1,"message":"513","line":14,"column":5,"nodeType":"491","messageId":"492","endLine":14,"endColumn":12},{"ruleId":"489","severity":1,"message":"514","line":16,"column":5,"nodeType":"491","messageId":"492","endLine":16,"endColumn":8},{"ruleId":"489","severity":1,"message":"515","line":18,"column":69,"nodeType":"491","messageId":"492","endLine":18,"endColumn":78},{"ruleId":"489","severity":1,"message":"516","line":18,"column":162,"nodeType":"491","messageId":"492","endLine":18,"endColumn":168},{"ruleId":"489","severity":1,"message":"517","line":21,"column":10,"nodeType":"491","messageId":"492","endLine":21,"endColumn":35},{"ruleId":"489","severity":1,"message":"518","line":21,"column":49,"nodeType":"491","messageId":"492","endLine":21,"endColumn":54},{"ruleId":"489","severity":1,"message":"496","line":6,"column":10,"nodeType":"491","messageId":"492","endLine":6,"endColumn":18},{"ruleId":"489","severity":1,"message":"490","line":6,"column":20,"nodeType":"491","messageId":"492","endLine":6,"endColumn":36},{"ruleId":"489","severity":1,"message":"493","line":6,"column":38,"nodeType":"491","messageId":"492","endLine":6,"endColumn":52},{"ruleId":"489","severity":1,"message":"494","line":7,"column":10,"nodeType":"491","messageId":"492","endLine":7,"endColumn":16},{"ruleId":"489","severity":1,"message":"495","line":7,"column":26,"nodeType":"491","messageId":"492","endLine":7,"endColumn":37},{"ruleId":"489","severity":1,"message":"497","line":7,"column":67,"nodeType":"491","messageId":"492","endLine":7,"endColumn":71},{"ruleId":"489","severity":1,"message":"498","line":14,"column":8,"nodeType":"491","messageId":"492","endLine":14,"endColumn":29},{"ruleId":"489","severity":1,"message":"499","line":16,"column":10,"nodeType":"491","messageId":"492","endLine":16,"endColumn":22},{"ruleId":"489","severity":1,"message":"500","line":16,"column":24,"nodeType":"491","messageId":"492","endLine":16,"endColumn":29},{"ruleId":"489","severity":1,"message":"501","line":17,"column":8,"nodeType":"491","messageId":"492","endLine":17,"endColumn":18},{"ruleId":"489","severity":1,"message":"502","line":19,"column":8,"nodeType":"491","messageId":"492","endLine":19,"endColumn":20},{"ruleId":"489","severity":1,"message":"503","line":21,"column":8,"nodeType":"491","messageId":"492","endLine":21,"endColumn":16},{"ruleId":"505","severity":1,"message":"506","line":133,"column":31,"nodeType":"507","messageId":"508","endLine":133,"endColumn":33},{"ruleId":"505","severity":1,"message":"506","line":133,"column":66,"nodeType":"507","messageId":"508","endLine":133,"endColumn":68},{"ruleId":"489","severity":1,"message":"519","line":107,"column":12,"nodeType":"491","messageId":"492","endLine":107,"endColumn":19},{"ruleId":"489","severity":1,"message":"520","line":107,"column":21,"nodeType":"491","messageId":"492","endLine":107,"endColumn":31},{"ruleId":"489","severity":1,"message":"521","line":3,"column":16,"nodeType":"491","messageId":"492","endLine":3,"endColumn":20},{"ruleId":"489","severity":1,"message":"521","line":4,"column":10,"nodeType":"491","messageId":"492","endLine":4,"endColumn":14},{"ruleId":"489","severity":1,"message":"522","line":4,"column":16,"nodeType":"491","messageId":"492","endLine":4,"endColumn":26},{"ruleId":"489","severity":1,"message":"523","line":4,"column":10,"nodeType":"491","messageId":"492","endLine":4,"endColumn":18},{"ruleId":"489","severity":1,"message":"494","line":6,"column":10,"nodeType":"491","messageId":"492","endLine":6,"endColumn":16},{"ruleId":"489","severity":1,"message":"524","line":6,"column":18,"nodeType":"491","messageId":"492","endLine":6,"endColumn":22},{"ruleId":"489","severity":1,"message":"525","line":6,"column":24,"nodeType":"491","messageId":"492","endLine":6,"endColumn":32},{"ruleId":"489","severity":1,"message":"526","line":6,"column":34,"nodeType":"491","messageId":"492","endLine":6,"endColumn":48},{"ruleId":"489","severity":1,"message":"502","line":6,"column":50,"nodeType":"491","messageId":"492","endLine":6,"endColumn":62},{"ruleId":"489","severity":1,"message":"527","line":11,"column":10,"nodeType":"491","messageId":"492","endLine":11,"endColumn":14},{"ruleId":"489","severity":1,"message":"522","line":11,"column":37,"nodeType":"491","messageId":"492","endLine":11,"endColumn":47},{"ruleId":"489","severity":1,"message":"523","line":11,"column":49,"nodeType":"491","messageId":"492","endLine":11,"endColumn":57},{"ruleId":"489","severity":1,"message":"528","line":13,"column":8,"nodeType":"491","messageId":"492","endLine":13,"endColumn":29},{"ruleId":"489","severity":1,"message":"494","line":6,"column":10,"nodeType":"491","messageId":"492","endLine":6,"endColumn":16},{"ruleId":"489","severity":1,"message":"526","line":6,"column":34,"nodeType":"491","messageId":"492","endLine":6,"endColumn":48},{"ruleId":"489","severity":1,"message":"528","line":13,"column":8,"nodeType":"491","messageId":"492","endLine":13,"endColumn":29},{"ruleId":"489","severity":1,"message":"494","line":6,"column":10,"nodeType":"491","messageId":"492","endLine":6,"endColumn":16},{"ruleId":"489","severity":1,"message":"526","line":6,"column":34,"nodeType":"491","messageId":"492","endLine":6,"endColumn":48},{"ruleId":"489","severity":1,"message":"528","line":13,"column":8,"nodeType":"491","messageId":"492","endLine":13,"endColumn":29},{"ruleId":"489","severity":1,"message":"494","line":6,"column":26,"nodeType":"491","messageId":"492","endLine":6,"endColumn":32},{"ruleId":"489","severity":1,"message":"495","line":6,"column":53,"nodeType":"491","messageId":"492","endLine":6,"endColumn":64},{"ruleId":"489","severity":1,"message":"529","line":6,"column":66,"nodeType":"491","messageId":"492","endLine":6,"endColumn":77},{"ruleId":"489","severity":1,"message":"497","line":6,"column":94,"nodeType":"491","messageId":"492","endLine":6,"endColumn":98},{"ruleId":"489","severity":1,"message":"530","line":6,"column":100,"nodeType":"491","messageId":"492","endLine":6,"endColumn":108},{"ruleId":"489","severity":1,"message":"531","line":7,"column":22,"nodeType":"491","messageId":"492","endLine":7,"endColumn":29},{"ruleId":"489","severity":1,"message":"532","line":57,"column":10,"nodeType":"491","messageId":"492","endLine":57,"endColumn":17},{"ruleId":"489","severity":1,"message":"533","line":75,"column":12,"nodeType":"491","messageId":"492","endLine":75,"endColumn":20},{"ruleId":"489","severity":1,"message":"534","line":82,"column":11,"nodeType":"491","messageId":"492","endLine":82,"endColumn":22},{"ruleId":"489","severity":1,"message":"494","line":6,"column":10,"nodeType":"491","messageId":"492","endLine":6,"endColumn":16},{"ruleId":"489","severity":1,"message":"526","line":6,"column":34,"nodeType":"491","messageId":"492","endLine":6,"endColumn":48},{"ruleId":"489","severity":1,"message":"528","line":13,"column":8,"nodeType":"491","messageId":"492","endLine":13,"endColumn":29},{"ruleId":"489","severity":1,"message":"494","line":6,"column":10,"nodeType":"491","messageId":"492","endLine":6,"endColumn":16},{"ruleId":"489","severity":1,"message":"495","line":6,"column":26,"nodeType":"491","messageId":"492","endLine":6,"endColumn":37},{"ruleId":"489","severity":1,"message":"497","line":6,"column":67,"nodeType":"491","messageId":"492","endLine":6,"endColumn":71},{"ruleId":"489","severity":1,"message":"523","line":13,"column":21,"nodeType":"491","messageId":"492","endLine":13,"endColumn":29},{"ruleId":"489","severity":1,"message":"533","line":134,"column":12,"nodeType":"491","messageId":"492","endLine":134,"endColumn":20},{"ruleId":"489","severity":1,"message":"535","line":136,"column":11,"nodeType":"491","messageId":"492","endLine":136,"endColumn":22},{"ruleId":"489","severity":1,"message":"534","line":140,"column":11,"nodeType":"491","messageId":"492","endLine":140,"endColumn":22},{"ruleId":"489","severity":1,"message":"536","line":10,"column":5,"nodeType":"491","messageId":"492","endLine":10,"endColumn":9},{"ruleId":"489","severity":1,"message":"537","line":16,"column":5,"nodeType":"491","messageId":"492","endLine":16,"endColumn":19},{"ruleId":"489","severity":1,"message":"538","line":20,"column":5,"nodeType":"491","messageId":"492","endLine":20,"endColumn":18},{"ruleId":"489","severity":1,"message":"539","line":23,"column":5,"nodeType":"491","messageId":"492","endLine":23,"endColumn":11},{"ruleId":"489","severity":1,"message":"540","line":29,"column":8,"nodeType":"491","messageId":"492","endLine":29,"endColumn":24},{"ruleId":"489","severity":1,"message":"541","line":35,"column":8,"nodeType":"491","messageId":"492","endLine":35,"endColumn":23},{"ruleId":"489","severity":1,"message":"542","line":39,"column":22,"nodeType":"491","messageId":"492","endLine":39,"endColumn":32},{"ruleId":"489","severity":1,"message":"543","line":39,"column":48,"nodeType":"491","messageId":"492","endLine":39,"endColumn":62},{"ruleId":"489","severity":1,"message":"544","line":128,"column":12,"nodeType":"491","messageId":"492","endLine":128,"endColumn":15},{"ruleId":"489","severity":1,"message":"545","line":128,"column":17,"nodeType":"491","messageId":"492","endLine":128,"endColumn":23},{"ruleId":"489","severity":1,"message":"546","line":129,"column":12,"nodeType":"491","messageId":"492","endLine":129,"endColumn":17},{"ruleId":"489","severity":1,"message":"547","line":129,"column":19,"nodeType":"491","messageId":"492","endLine":129,"endColumn":27},{"ruleId":"489","severity":1,"message":"548","line":130,"column":12,"nodeType":"491","messageId":"492","endLine":130,"endColumn":24},{"ruleId":"489","severity":1,"message":"549","line":130,"column":26,"nodeType":"491","messageId":"492","endLine":130,"endColumn":41},{"ruleId":"489","severity":1,"message":"550","line":131,"column":27,"nodeType":"491","messageId":"492","endLine":131,"endColumn":43},{"ruleId":"489","severity":1,"message":"551","line":5,"column":10,"nodeType":"491","messageId":"492","endLine":5,"endColumn":16},{"ruleId":"489","severity":1,"message":"529","line":5,"column":24,"nodeType":"491","messageId":"492","endLine":5,"endColumn":35},{"ruleId":"489","severity":1,"message":"527","line":5,"column":37,"nodeType":"491","messageId":"492","endLine":5,"endColumn":41},{"ruleId":"489","severity":1,"message":"521","line":5,"column":43,"nodeType":"491","messageId":"492","endLine":5,"endColumn":47},{"ruleId":"489","severity":1,"message":"552","line":5,"column":49,"nodeType":"491","messageId":"492","endLine":5,"endColumn":54},{"ruleId":"489","severity":1,"message":"522","line":5,"column":56,"nodeType":"491","messageId":"492","endLine":5,"endColumn":66},{"ruleId":"489","severity":1,"message":"553","line":8,"column":8,"nodeType":"491","messageId":"492","endLine":8,"endColumn":21},{"ruleId":"489","severity":1,"message":"551","line":5,"column":10,"nodeType":"491","messageId":"492","endLine":5,"endColumn":16},{"ruleId":"489","severity":1,"message":"527","line":5,"column":37,"nodeType":"491","messageId":"492","endLine":5,"endColumn":41},{"ruleId":"489","severity":1,"message":"521","line":5,"column":43,"nodeType":"491","messageId":"492","endLine":5,"endColumn":47},{"ruleId":"489","severity":1,"message":"552","line":5,"column":49,"nodeType":"491","messageId":"492","endLine":5,"endColumn":54},{"ruleId":"489","severity":1,"message":"522","line":5,"column":56,"nodeType":"491","messageId":"492","endLine":5,"endColumn":66},{"ruleId":"489","severity":1,"message":"553","line":8,"column":8,"nodeType":"491","messageId":"492","endLine":8,"endColumn":21},{"ruleId":"489","severity":1,"message":"554","line":1,"column":17,"nodeType":"491","messageId":"492","endLine":1,"endColumn":25},{"ruleId":"489","severity":1,"message":"509","line":2,"column":8,"nodeType":"491","messageId":"492","endLine":2,"endColumn":13},{"ruleId":"489","severity":1,"message":"510","line":4,"column":8,"nodeType":"491","messageId":"492","endLine":4,"endColumn":18},{"ruleId":"489","severity":1,"message":"551","line":8,"column":5,"nodeType":"491","messageId":"492","endLine":8,"endColumn":11},{"ruleId":"489","severity":1,"message":"522","line":9,"column":5,"nodeType":"491","messageId":"492","endLine":9,"endColumn":15},{"ruleId":"489","severity":1,"message":"512","line":11,"column":5,"nodeType":"491","messageId":"492","endLine":11,"endColumn":14},{"ruleId":"489","severity":1,"message":"555","line":13,"column":5,"nodeType":"491","messageId":"492","endLine":13,"endColumn":10},{"ruleId":"489","severity":1,"message":"556","line":14,"column":5,"nodeType":"491","messageId":"492","endLine":14,"endColumn":10},{"ruleId":"489","severity":1,"message":"557","line":15,"column":5,"nodeType":"491","messageId":"492","endLine":15,"endColumn":14},{"ruleId":"489","severity":1,"message":"558","line":16,"column":5,"nodeType":"491","messageId":"492","endLine":16,"endColumn":14},{"ruleId":"489","severity":1,"message":"559","line":17,"column":5,"nodeType":"491","messageId":"492","endLine":17,"endColumn":19},{"ruleId":"489","severity":1,"message":"560","line":18,"column":5,"nodeType":"491","messageId":"492","endLine":18,"endColumn":14},{"ruleId":"489","severity":1,"message":"561","line":19,"column":5,"nodeType":"491","messageId":"492","endLine":19,"endColumn":20},{"ruleId":"489","severity":1,"message":"562","line":20,"column":5,"nodeType":"491","messageId":"492","endLine":20,"endColumn":13},{"ruleId":"489","severity":1,"message":"530","line":21,"column":5,"nodeType":"491","messageId":"492","endLine":21,"endColumn":13},"no-native-reassign",["563"],"no-negated-in-lhs",["564"],"no-unused-vars","'IconFileDownload' is defined but never used.","Identifier","unusedVar","'IconSquarePlus' is defined but never used.","'Avatar' is defined but never used.","'CardActions' is defined but never used.","'IconEdit' is defined but never used.","'Menu' is defined but never used.","'MoreHorizOutlinedIcon' is defined but never used.","'createStyles' is defined but never used.","'Theme' is defined but never used.","'InputLabel' is defined but never used.","'ListItemText' is defined but never used.","'Checkbox' is defined but never used.","'initialSelected' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'axios' is defined but never used.","'configData' is defined but never used.","'SearchSection' is defined but never used.","'TextField' is defined but never used.","'Divider' is defined but never used.","'Box' is defined but never used.","'FormLabel' is defined but never used.","'Popper' is defined but never used.","'IconAdjustmentsHorizontal' is defined but never used.","'IconX' is defined but never used.","'resFlag' is assigned a value but never used.","'setResFlag' is assigned a value but never used.","'Link' is defined but never used.","'Typography' is defined but never used.","'useTheme' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemAvatar' is defined but never used.","'Grid' is defined but never used.","'StorefrontTwoToneIcon' is defined but never used.","'CardContent' is defined but never used.","'MenuItem' is defined but never used.","'TabList' is defined but never used.","'LinkTab' is defined but never used.","'anchorEl' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'Card' is defined but never used.","'InputAdornment' is defined but never used.","'OutlinedInput' is defined but never used.","'Switch' is defined but never used.","'PerfectScrollbar' is defined but never used.","'UpgradePlanCard' is defined but never used.","'IconSearch' is defined but never used.","'IconArrowRight' is defined but never used.","'sdm' is assigned a value but never used.","'setSdm' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'notification' is assigned a value but never used.","'setNotification' is assigned a value but never used.","'setSelectedIndex' is assigned a value but never used.","'Button' is defined but never used.","'Stack' is defined but never used.","'AnimateButton' is defined but never used.","'useState' is defined but never used.","'Paper' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TablePagination' is defined but never used.","'TableRow' is defined but never used.","no-global-assign","no-unsafe-negation"]